(1
 (ace-window .
	     [(0 10 0)
	      ((avy
		(0 5 0)))
	      "Quickly switch windows." tar
	      ((:url . "https://github.com/abo-abo/ace-window")
	       (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	       (:authors
		("Oleh Krehel" . "ohwoeowho@gmail.com"))
	       (:keywords "window" "location"))])
 (ack .
      [(1 10)
       nil "interface to ack-like tools" tar
       ((:url . "https://github.com/leoliu/ack-el")
	(:maintainer "João Távora" . "joaotavora@gmail.com")
	(:authors
	 ("Leo Liu" . "sdl.web@gmail.com"))
	(:keywords "tools" "processes" "convenience"))])
 (ada-mode .
	   [(7 2 1)
	    ((uniquify-files
	      (1 0 1))
	     (wisi
	      (3 1 8))
	     (emacs
	      (25 3)))
	    "major-mode for editing Ada sources" tar
	    ((:url . "http://www.nongnu.org/ada-mode/")
	     (:keywords "languages" "ada")
	     (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
	     (:authors
	      ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
	     (:commit . "fa4f86a75b54d30fdc4f9bbf3ceeac24d2ab5e0b"))])
 (ada-ref-man .
	      [(2020 1)
	       nil "Ada Reference Manual 2012" tar
	       ((:url . "http://stephe-leake.org/ada/arm.html")
		(:maintainer "Stephen Leake" . "stephen_leake@member.fsf.org")
		(:authors
		 ("Stephen Leake" . "stephen_leake@member.fsf.org"))
		(:keywords "languages" "ada"))])
 (adaptive-wrap .
		[(0 8)
		 nil "Smart line-wrapping with wrap-prefix" tar
		 ((:maintainer "Stephen Berman" . "stephen.berman@gmx.net")
		  (:authors
		   ("Stephen Berman" . "stephen.berman@gmx.net")
		   ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		  (:url . "https://elpa.gnu.org/packages/adaptive-wrap.html"))])
 (adjust-parens .
		[(3 1)
		 nil "Indent and dedent Lisp code, automatically adjust close parens" tar
		 ((:maintainer "Barry O'Reilly" . "gundaetiapo@gmail.com")
		  (:authors
		   ("Barry O'Reilly" . "gundaetiapo@gmail.com"))
		  (:url . "http://elpa.gnu.org/packages/adjust-parens.html"))])
 (advice-patch .
	       [(0 1)
		((emacs
		  (24 4)))
		"Use patches to advise the inside of functions" single
		((:url . "http://elpa.gnu.org/packages/advice-patch.html")
		 (:authors
		  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (aggressive-completion .
			[(1 7)
			 ((emacs
			   (27 1)))
			 "Automatic minibuffer completion" tar
			 ((:keywords "minibuffer" "completion")
			  (:maintainer "Tassilo Horn" . "tsdh@gnu.org")
			  (:authors
			   ("Tassilo Horn" . "tsdh@gnu.org"))
			  (:url . "https://elpa.gnu.org/packages/aggressive-completion.html")
			  (:commit . "d92bf2428133b6e261780e16b7030afe91d3668e"))])
 (aggressive-indent .
		    [(1 10 0)
		     ((emacs
		       (24 3)))
		     "Minor mode to aggressively keep your code always indented" tar
		     ((:url . "https://github.com/Malabarba/aggressive-indent-mode")
		      (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		      (:authors
		       ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		      (:keywords "indent" "lisp" "maint" "tools"))])
 (ahungry-theme .
		[(1 10 0)
		 ((emacs
		   (24)))
		 "Ahungry color theme for Emacs.  Make sure to (load-theme 'ahungry)." tar
		 ((:url . "https://github.com/ahungry/color-theme-ahungry")
		  (:maintainer "Matthew Carter" . "m@ahungry.com")
		  (:authors
		   ("Matthew Carter" . "m@ahungry.com"))
		  (:keywords "ahungry" "palette" "color" "theme" "emacs" "color-theme" "deftheme"))])
 (aircon-theme .
	       [(0 0 5)
		((emacs
		  (24 4)))
		"Cool and legible light theme" tar
		((:url . "https://git.sr.ht/~chambln/aircon-theme.el")
		 (:keywords "faces")
		 (:maintainer "Gregory Chamberlain" . "~chambln/public-inbox@lists.sr.ht")
		 (:authors
		  ("Gregory Chamberlain" . "greg@cosine.blue"))
		 (:commit . "4741bd16f539ec8800dadc69f885b73b9fc2b106"))])
 (all .
      [(1 0)
       nil "Edit all lines matching a given regexp" single
       ((:url . "http://elpa.gnu.org/packages/all.html")
	(:keywords "matching")
	(:authors
	 ("Per Abrahamsen" . "per.abrahamsen@gmail.com"))
	(:maintainer "Per Abrahamsen" . "per.abrahamsen@gmail.com"))])
 (ampc .
       [(0 2)
	nil "Asynchronous Music Player Controller" single
	((:url . "http://elpa.gnu.org/packages/ampc.html")
	 (:keywords "ampc" "mpc" "mpd")
	 (:authors
	  ("Christopher Schmidt" . "christopher@ch.ristopher.com"))
	 (:maintainer nil . "emacs-devel@gnu.org"))])
 (arbitools .
	    [(0 977)
	     ((cl-lib
	       (0 5)))
	     "Package for chess tournaments administration" single
	     ((:url . "http://elpa.gnu.org/packages/arbitools.html")
	      (:authors
	       ("David Gonzalez Gandara" . "dggandara@member.fsf.org"))
	      (:maintainer "David Gonzalez Gandara" . "dggandara@member.fsf.org"))])
 (ascii-art-to-unicode .
		       [(1 13)
			nil "a small artist adjunct" single
			((:keywords "ascii" "unicode" "box-drawing")
			 (:authors
			  ("Thien-Thi Nguyen" . "ttn@gnu.org"))
			 (:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
			 (:url . "http://www.gnuvola.org/software/aa2u/"))])
 (async .
	[(1 9 5)
	 ((emacs
	   (24 3)))
	 "Asynchronous processing in Emacs" tar
	 ((:url . "https://github.com/jwiegley/emacs-async")
	  (:maintainer "John Wiegley" . "jwiegley@gmail.com")
	  (:authors
	   ("John Wiegley" . "jwiegley@gmail.com"))
	  (:keywords "async"))])
 (auctex .
	 [(13 1 3)
	  ((emacs
	    (25 1)))
	  "Integrated environment for *TeX*" tar
	  ((:url . "https://www.gnu.org/software/auctex/")
	   (:keywords "tex" "latex" "texinfo" "context" "doctex" "preview-latex")
	   (:maintainer nil . "auctex-devel@gnu.org")
	   (:commit . "b91f15b3a375445985143ed1d6e41490ea62780a"))])
 (aumix-mode .
	     [(7)
	      nil "run the aumix program in a buffer" single
	      ((:keywords "multimedia" "mixer" "aumix")
	       (:authors
		("Kevin Ryde" . "user42_kevin@yahoo.com.au"))
	       (:maintainer "Kevin Ryde" . "user42_kevin@yahoo.com.au")
	       (:url . "http://user42.tuxfamily.org/aumix-mode/index.html"))])
 (auto-correct .
	       [(1 1 4)
		nil "Remembers and automatically fixes past corrections" single
		((:url . "http://elpa.gnu.org/packages/auto-correct.html")
		 (:keywords "editing")
		 (:authors
		  ("Ian Dunn" . "dunni@gnu.org"))
		 (:maintainer "Ian Dunn" . "dunni@gnu.org"))])
 (auto-overlays .
		[(0 10 10)
		 ((cl-lib
		   (0 5)))
		 "Automatic regexp-delimited overlays" tar
		 ((:url . "http://www.dr-qubit.org/tags/computing-code-emacs.html")
		  (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
		  (:authors
		   ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
		  (:keywords "extensions"))])
 (avy .
      [(0 5 0)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "Jump to arbitrary positions in visible text and select text quickly." tar
       ((:url . "https://github.com/abo-abo/avy")
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:keywords "point" "location"))])
 (bbdb .
       [(3 2 2 2)
	((emacs
	  (24))
	 (cl-lib
	  (0 5)))
	"Big Brother DataBase" tar
	((:maintainer "Roland Winkler" . "winkler@gnu.org")
	 (:url . "https://elpa.gnu.org/packages/bbdb.html")
	 (:commit . "715f35b5f53d6bcdcb3754b4f98933df01b57c15"))])
 (beacon .
	 [(1 3 3)
	  ((seq
	    (2 14)))
	  "Highlight the cursor whenever the window scrolls" single
	  ((:keywords "convenience")
	   (:authors
	    ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	   (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	   (:url . "https://github.com/Malabarba/beacon"))])
 (blist .
	[(0 1)
	 nil "Display bookmarks in an ibuffer way" tar
	 ((:keywords "convenience")
	  (:maintainer "Durand" . "mmemmew@gmail.com")
	  (:authors
	   ("Durand" . "mmemmew@gmail.com"))
	  (:url . "https://elpa.gnu.org/packages/blist.html"))])
 (bluetooth .
	    [(0 3 1)
	     ((emacs
	       (25 1))
	      (dash
	       (2 18 1)))
	     "A Major mode for Bluetooth devices" tar
	     ((:url . "https://gitlab.com/rstocker/emacs-bluetooth")
	      (:keywords "hardware")
	      (:maintainer "Raffael Stocker" . "r.stocker@mnet-mail.de")
	      (:authors
	       ("Raffael Stocker" . "r.stocker@mnet-mail.de")
	       ("Etienne Prud’homme" . "e.e.f.prudhomme@gmail.com"))
	      (:commit . "84488dfdd2355e512f9e9444a233448221b3d9cc"))])
 (bnf-mode .
	   [(0 4 5)
	    ((cl-lib
	      (0 5))
	     (emacs
	      (24 3)))
	    "Major mode for editing BNF grammars." tar
	    ((:url . "https://github.com/sergeyklay/bnf-mode")
	     (:maintainer "Serghei Iakovlev" . "egrep@protonmail.ch")
	     (:authors
	      ("Serghei Iakovlev" . "egrep@protonmail.ch"))
	     (:keywords "languages"))])
 (boxy .
       [(1 1 1)
	((emacs
	  (26 1)))
	"A boxy layout framework" tar
	((:url . "https://gitlab.com/tygrdev/boxy")
	 (:keywords "tools")
	 (:maintainer "Tyler Grinn" . "tylergrinn@gmail.com")
	 (:authors
	  ("Tyler Grinn" . "tylergrinn@gmail.com"))
	 (:commit . "350bc70ed16c4eccc3b20114347cbdc3591140f3"))])
 (boxy-headings .
		[(2 1 3)
		 ((emacs
		   (26 1))
		  (boxy
		   (1 0))
		  (org
		   (9 4)))
		 "View org files in a boxy diagram" tar
		 ((:url . "https://gitlab.com/tygrdev/boxy-headings")
		  (:keywords "tools")
		  (:maintainer "Tyler Grinn" . "tylergrinn@gmail.com")
		  (:authors
		   ("Tyler Grinn" . "tylergrinn@gmail.com"))
		  (:commit . "66fc9e50f02d6dee546fa6923ca28f1f64db9065"))])
 (brief .
	[(5 87)
	 nil "Brief Editor Emulator (Brief Mode)" tar
	 ((:maintainer "Luke Lee" . "luke.yx.lee@gmail.com")
	  (:authors
	   ("Luke Lee" . "luke.yx.lee@gmail.com"))
	  (:keywords "brief" "emulations" "crisp")
	  (:url . "http://elpa.gnu.org/packages/brief.html"))])
 (buffer-env .
	     [(0 3)
	      ((emacs
		(27 1)))
	      "Buffer-local process environments" tar
	      ((:url . "https://github.com/astoff/buffer-env")
	       (:keywords "processes" "tools")
	       (:maintainer "Augusto Stoffel" . "arstoffel@gmail.com")
	       (:authors
		("Augusto Stoffel" . "arstoffel@gmail.com"))
	       (:commit . "ba1c9d24d3f1ba58445cbf1f762ba6859b66f6bf"))])
 (buffer-expose .
		[(0 4 3)
		 ((emacs
		   (25))
		  (cl-lib
		   (0 5)))
		 "Visual buffer switching using a window grid" single
		 ((:keywords "convenience")
		  (:authors
		   ("Clemens Radermacher" . "clemera@posteo.net"))
		  (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		  (:url . "https://github.com/clemera/buffer-expose"))])
 (bug-hunter .
	     [(1 3 1)
	      ((seq
		(1 3))
	       (cl-lib
		(0 5)))
	      "Hunt down errors by bisecting elisp files" tar
	      ((:url . "https://github.com/Malabarba/elisp-bug-hunter")
	       (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	       (:authors
		("Artur Malabarba" . "emacs@endlessparentheses.com"))
	       (:keywords "lisp"))])
 (cape .
       [(0 8)
	((emacs
	  (27 1)))
	"Completion At Point Extensions" tar
	((:url . "https://github.com/minad/cape")
	 (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	 (:authors
	  ("Daniel Mendler" . "mail@daniel-mendler.de"))
	 (:commit . "7042b048c8820223551d75c643b958befe7411d2"))])
 (capf-autosuggest .
		   [(0 3)
		    ((emacs
		      (25 1)))
		    "History autosuggestions for comint and eshell" tar
		    ((:url . "https://repo.or.cz/emacs-capf-autosuggest.git")
		     (:maintainer "jakanakaevangeli" . "jakanakaevangeli@chiru.no")
		     (:authors
		      ("jakanakaevangeli" . "jakanakaevangeli@chiru.no")))])
 (caps-lock .
	    [(1 0)
	     nil "Caps-lock as a minor mode" single
	     ((:url . "http://elpa.gnu.org/packages/caps-lock.html")
	      (:authors
	       ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	      (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (captain .
	  [(1 0 3)
	   nil "CAPiTalization is Automatic IN emacs" single
	   ((:url . "http://elpa.gnu.org/packages/captain.html")
	    (:keywords "editing")
	    (:authors
	     ("Ian Dunn" . "dunni@gnu.org"))
	    (:maintainer "Ian Dunn" . "dunni@gnu.org"))])
 (chess .
	[(2 0 5)
	 ((cl-lib
	   (0 5)))
	 "Play chess in GNU Emacs" tar
	 ((:maintainer "Mario Lang" . "mlang@delysid.org")
	  (:authors
	   ("John Wiegley" . "johnw@gnu.org"))
	  (:keywords "games")
	  (:url . "http://elpa.gnu.org/packages/chess.html"))])
 (cl-generic .
	     [(0 3)
	      nil "Forward cl-generic compatibility for Emacs<25" single
	      ((:url . "http://elpa.gnu.org/packages/cl-generic.html")
	       (:authors
		("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	       (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (cl-lib .
	 [(0 7)
	  nil "Forward cl-lib compatibility library for Emacs<24.3" tar
	  ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	   (:authors
	    ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	   (:url . "https://elpa.gnu.org/packages/cl-lib.html"))])
 (cl-print .
	   [(1 0)
	    ((emacs
	      (25)))
	    "CL-style generic printing" single
	    ((:url . "http://elpa.gnu.org/packages/cl-print.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (clipboard-collector .
		      [(0 3)
		       ((emacs
			 (25)))
		       "Collect clipboard entries according to regex rules" tar
		       ((:url . "https://github.com/clemera/clipboard-collector")
			(:maintainer "Clemens Radermacher" . "clemera@posteo.net")
			(:authors
			 ("Clemens Radermacher" . "clemera@posteo.net"))
			(:keywords "convenience"))])
 (cobol-mode .
	     [(1 0 0)
	      ((cl-lib
		(0 5)))
	      "Mode for editing COBOL code" single
	      ((:url . "http://elpa.gnu.org/packages/cobol-mode.html")
	       (:keywords "languages")
	       (:authors
		("Edward Hart" . "edward.dan.hart@gmail.com"))
	       (:maintainer "Edward Hart" . "edward.dan.hart@gmail.com"))])
 (code-cells .
	     [(0 2)
	      ((emacs
		(27 1)))
	      "Lightweight notebooks with support for ipynb files" tar
	      ((:url . "https://github.com/astoff/code-cells.el")
	       (:keywords "convenience" "outlines")
	       (:maintainer "Augusto Stoffel" . "arstoffel@gmail.com")
	       (:authors
		("Augusto Stoffel" . "arstoffel@gmail.com"))
	       (:commit . "ea7799c447066fee78c4efbafbdaf09520c7109d"))])
 (coffee-mode .
	      [(0 4 1 1)
	       nil "Major mode for CoffeeScript files" single
	       ((:keywords "coffeescript" "major" "mode")
		(:authors
		 ("Chris Wanstrath" . "chris@ozmm.org"))
		(:maintainer "Chris Wanstrath" . "chris@ozmm.org")
		(:url . "http://github.com/defunkt/coffee-mode"))])
 (comint-mime .
	      [(0 1)
	       ((emacs
		 (28 1)))
	       "Display content of various MIME types in comint buffers" tar
	       ((:url . "https://github.com/astoff/comint-mime")
		(:keywords "processes" "multimedia")
		(:maintainer "Augusto Stoffel" . "arstoffel@gmail.com")
		(:authors
		 ("Augusto Stoffel" . "arstoffel@gmail.com"))
		(:commit . "2ac67834d9bb8e6a3521d75b934a4b496a3a0f9d"))])
 (compact-docstrings .
		     [(0 2)
		      nil "Shrink blank lines in docstrings and doc comments" single
		      ((:keywords "convenience" "faces" "lisp" "maint" "c")
		       (:authors
			("Clément Pit-Claudel" . "clement.pitclaudel@live.com"))
		       (:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com")
		       (:url . "https://github.com/cpitclaudel/compact-docstrings"))])
 (company .
	  [(0 9 13)
	   ((emacs
	     (24 3)))
	   "Modular text completion framework" tar
	   ((:url . "http://company-mode.github.io/")
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:authors
	     ("Nikolaj Schumacher"))
	    (:keywords "abbrev" "convenience" "matching"))])
 (company-ebdb .
	       [(1 1)
		((company
		  (0 9 4))
		 (ebdb
		  (0 2)))
		"company-mode completion backend for EBDB in message-mode" single
		((:url . "http://elpa.gnu.org/packages/company-ebdb.html")
		 (:authors
		  ("Jan Tatarik" . "jan.tatarik@gmail.com"))
		 (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net"))])
 (company-math .
	       [(1 4)
		((company
		  (0 8 0))
		 (math-symbol-lists
		  (1 3)))
		"Completion backends for unicode math symbols and latex tags" tar
		((:url . "https://github.com/vspinu/company-math")
		 (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com")
		 (:authors
		  ("Vitalie Spinu" . "spinuvit@gmail.com"))
		 (:keywords "unicode" "symbols" "completion"))])
 (company-statistics .
		     [(0 2 3)
		      ((emacs
			(24 3))
		       (company
			(0 8 5)))
		      "Sort candidates using completion history" tar
		      ((:url . "https://github.com/company-mode/company-statistics")
		       (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
		       (:authors
			("Ingo Lohmar" . "i.lohmar@gmail.com"))
		       (:keywords "abbrev" "convenience" "matching"))])
 (compat .
	 [(28 1 2 0)
	  ((emacs
	    (24 3))
	   (nadvice
	    (0 3)))
	  "Emacs Lisp Compatibility Library" tar
	  ((:url . "https://sr.ht/~pkal/compat")
	   (:keywords "lisp")
	   (:maintainer "Compat Development" . "~pkal/compat-devel@lists.sr.ht")
	   (:authors
	    ("Philip Kaludercic" . "philipk@posteo.net"))
	   (:commit . "6b70229adf1ad7c2227789061dd1b2fc00d36ad8"))])
 (consult .
	  [(0 18)
	   ((emacs
	     (27 1))
	    (compat
	     (28 1)))
	   "Consulting completing-read" tar
	   ((:url . "https://github.com/minad/consult")
	    (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	    (:authors
	     ("Daniel Mendler and Consult contributors"))
	    (:commit . "0f55ad146b327d82a4a6dfa674349bfbbf3820e4"))])
 (context-coloring .
		   [(8 1 0)
		    ((emacs
		      (24 3)))
		    "Highlight by scope" tar
		    ((:url . "https://github.com/jacksonrayhamilton/context-coloring")
		     (:maintainer "Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com")
		     (:authors
		      ("Jackson Ray Hamilton" . "jackson@jacksonrayhamilton.com"))
		     (:keywords "convenience" "faces" "tools"))])
 (corfu .
	[(0 26)
	 ((emacs
	   (27 1)))
	 "Completion Overlay Region FUnction" tar
	 ((:url . "https://github.com/minad/corfu")
	  (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	  (:authors
	   ("Daniel Mendler" . "mail@daniel-mendler.de"))
	  (:commit . "c07b8c168765c350ef4693d1d8cd26be43894872"))])
 (coterm .
	 [(1 5)
	  ((emacs
	    (26 1)))
	  "Terminal emulation for comint" tar
	  ((:url . "https://repo.or.cz/emacs-coterm.git")
	   (:keywords "processes")
	   (:maintainer "jakanakaevangeli" . "jakanakaevangeli@chiru.no")
	   (:authors
	    ("jakanakaevangeli" . "jakanakaevangeli@chiru.no"))
	   (:commit . "ef4b5fb55304266244c87d2c6aaefab58149da62"))])
 (counsel .
	  [(0 13 4)
	   ((emacs
	     (24 5))
	    (ivy
	     (0 13 4))
	    (swiper
	     (0 13 4)))
	   "Various completion functions using Ivy" tar
	   ((:url . "https://github.com/abo-abo/swiper")
	    (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	    (:authors
	     ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	    (:keywords "convenience" "matching" "tools"))])
 (cpio-mode .
	    [(0 17)
	     ((emacs
	       (24 5)))
	     "Handle cpio archives in the style of dired." tar
	     ((:maintainer "Douglas Lewan" . "d.lewan2000@gmail.com")
	      (:authors
	       ("Douglas Lewan" . "d.lewan2000@gmail.com"))
	      (:keywords "files")
	      (:url . "http://elpa.gnu.org/packages/cpio-mode.html"))])
 (cpupower .
	   [(1 0 5)
	    nil "cpupower command interface" tar
	    ((:url . "https://gitlab.com/steve-emacs-stuff/cpupower-el")
	     (:keywords "hardware" "cpupower" "cpu" "frequency-scaling")
	     (:maintainer "Stephen Meister" . "pallagun@gmail.com")
	     (:authors
	      ("Stephen Meister" . "pallagun@gmail.com"))
	     (:commit . "fa979dfafa1beb374bf42e937f0b5b99ed06222e"))])
 (crdt .
       [(0 3 0)
	nil "Collaborative editing using Conflict-free Replicated Data Types" tar
	((:url . "https://code.librehq.com/qhong/crdt.el")
	 (:keywords "collaboration" "crdt")
	 (:maintainer "Qiantan Hong" . "qhong@alum.mit.edu")
	 (:authors
	  ("Qiantan Hong" . "qhong@alum.mit.edu"))
	 (:commit . "77be6cded0e2d24fc9c132032ae3bf7ae8ed2cf9"))])
 (crisp .
	[(1 3 6)
	 nil "CRiSP/Brief Emacs emulator" single
	 ((:url . "http://elpa.gnu.org/packages/crisp.html")
	  (:keywords "emulations" "brief" "crisp")
	  (:authors
	   ("Gary D. Foster" . "Gary.Foster@Corp.Sun.COM"))
	  (:maintainer "Luke Lee" . "luke.yx.lee@gmail.com"))])
 (csharp-mode .
	      [(1 1 1)
	       ((emacs
		 (26 1)))
	       "C# mode derived mode" tar
	       ((:url . "https://github.com/emacs-csharp/csharp-mode")
		(:keywords "c#" "languages" "oop" "mode")
		(:maintainer "Jostein Kjønigsen" . "jostein@gmail.com")
		(:authors
		 ("Theodor Thornhill" . "theo@thornhill.no")))])
 (csv-mode .
	   [(1 21)
	    ((emacs
	      (27 1))
	     (cl-lib
	      (0 5)))
	    "Major mode for editing comma/char separated values" tar
	    ((:keywords "convenience")
	     (:maintainer nil . "emacs-devel@gnu.org")
	     (:authors
	      ("\"Francis J. Wright\"" . "F.J.Wright@qmul.ac.uk"))
	     (:url . "https://elpa.gnu.org/packages/csv-mode.html")
	     (:commit . "d10d68c382e17960fc9aaef072fd18a23ea92a86"))])
 (cursory .
	  [(0 2 1)
	   ((emacs
	     (27 1)))
	   "Manage cursor styles using presets" tar
	   ((:url . "https://git.sr.ht/~protesilaos/cursory")
	    (:keywords "convenience" "cursor")
	    (:maintainer "Cursory Development" . "~protesilaos/cursory@lists.sr.ht")
	    (:authors
	     ("Protesilaos Stavrou" . "info@protesilaos.com"))
	    (:commit . "e04fd74d56bee52eccbc124c5395ee78e47189a0"))])
 (cycle-quotes .
	       [(0 1)
		nil "Cycle between quote styles" tar
		((:maintainer "Simen Heggestøyl" . "simenheg@gmail.com")
		 (:authors
		  ("Simen Heggestøyl" . "simenheg@gmail.com"))
		 (:keywords "convenience")
		 (:url . "http://elpa.gnu.org/packages/cycle-quotes.html"))])
 (darkroom .
	   [(0 3)
	    ((cl-lib
	      (0 5)))
	    "Remove visual distractions and focus on writing" single
	    ((:url . "http://elpa.gnu.org/packages/darkroom.html")
	     (:keywords "convenience" "emulations")
	     (:authors
	      ("João Távora" . "joaotavora@gmail.com"))
	     (:maintainer "João Távora" . "joaotavora@gmail.com"))])
 (dash .
       [(2 19 1)
	((emacs
	  (24)))
	"A modern list library for Emacs" tar
	((:url . "https://github.com/magnars/dash.el")
	 (:maintainer "Magnar Sveen" . "magnars@gmail.com")
	 (:authors
	  ("Magnar Sveen" . "magnars@gmail.com"))
	 (:keywords "extensions" "lisp"))])
 (dbus-codegen .
	       [(0 1)
		((cl-lib
		  (0 5)))
		"Lisp code generation for D-Bus." single
		((:url . "http://elpa.gnu.org/packages/dbus-codegen.html")
		 (:keywords "comm" "dbus" "convenience")
		 (:authors
		  ("Daiki Ueno" . "ueno@gnu.org"))
		 (:maintainer nil . "emacs-devel@gnu.org"))])
 (debbugs .
	  [(0 32)
	   ((emacs
	     (26 1))
	    (soap-client
	     (3 1 5)))
	   "SOAP library to access debbugs servers" tar
	   ((:keywords "comm" "hypermedia")
	    (:maintainer "Michael Albinus" . "michael.albinus@gmx.de")
	    (:authors
	     ("Michael Albinus" . "michael.albinus@gmx.de"))
	    (:url . "https://elpa.gnu.org/packages/debbugs.html")
	    (:commit . "a35646a9798226b8630fbd7a0691edc78ccd92b3"))])
 (delight .
	  [(1 7)
	   ((cl-lib
	     (0 5))
	    (nadvice
	     (0 3)))
	   "A dimmer switch for your lighter text" single
	   ((:keywords "convenience")
	    (:authors
	     ("Phil Sainty" . "psainty@orcon.net.nz"))
	    (:maintainer "Phil Sainty" . "psainty@orcon.net.nz")
	    (:url . "https://savannah.nongnu.org/projects/delight"))])
 (denote .
	 [(0 4 0)
	  ((emacs
	    (27 2)))
	  "Simple notes with an efficient file-naming scheme" tar
	  ((:url . "https://git.sr.ht/~protesilaos/denote")
	   (:maintainer "Denote Development" . "~protesilaos/denote@lists.sr.ht")
	   (:authors
	    ("Protesilaos Stavrou" . "info@protesilaos.com"))
	   (:commit . "0ca421e3d403e0e81882b1a3584f482b97d27a15"))])
 (detached .
	   [(0 7)
	    ((emacs
	      (27 1)))
	    "A package to launch, and manage, detached processes" tar
	    ((:url . "https://sr.ht/~niklaseklund/detached.el/")
	     (:keywords "convenience" "processes")
	     (:maintainer "Niklas Eklund" . "niklas.eklund@posteo.net")
	     (:authors
	      ("Niklas Eklund" . "niklas.eklund@posteo.net"))
	     (:commit . "8402e7ef4574c719f114b15f89b4aecdddea1e1e"))])
 (devdocs .
	  [(0 4)
	   ((emacs
	     (27 1)))
	   "Emacs viewer for DevDocs" tar
	   ((:url . "https://github.com/astoff/devdocs.el")
	    (:keywords "help")
	    (:maintainer "Augusto Stoffel" . "arstoffel@gmail.com")
	    (:authors
	     ("Augusto Stoffel" . "arstoffel@gmail.com"))
	    (:commit . "cdc1a7cc3f05235883ffb098fe1c5a8963ed06e2"))])
 (dict-tree .
	    [(0 16)
	     ((trie
	       (0 3))
	      (tNFA
	       (0 1 1))
	      (heap
	       (0 3)))
	     "Dictionary data structure" tar
	     ((:url . "http://www.dr-qubit.org/emacs.php")
	      (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	      (:authors
	       ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	      (:keywords "extensions" "matching" "data structures trie" "tree" "dictionary" "completion" "regexp"))])
 (diff-hl .
	  [(1 8 8)
	   ((cl-lib
	     (0 2))
	    (emacs
	     (24 3)))
	   "Highlight uncommitted changes using VC" tar
	   ((:url . "https://github.com/dgutov/diff-hl")
	    (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	    (:authors
	     ("Dmitry Gutov" . "dgutov@yandex.ru"))
	    (:keywords "vc" "diff"))])
 (diffview .
	   [(1 0)
	    nil "View diffs in side-by-side format" single
	    ((:keywords "convenience" "diff")
	     (:authors
	      ("Mitchel Humpherys" . "mitch.special@gmail.com"))
	     (:maintainer "Mitchel Humpherys" . "mitch.special@gmail.com")
	     (:url . "https://github.com/mgalgs/diffview-mode"))])
 (diminish .
	   [(0 46)
	    ((emacs
	      (24 3)))
	    "Diminished modes are minor modes with no modeline display" tar
	    ((:url . "https://github.com/myrjola/diminish.el")
	     (:keywords "extensions" "diminish" "minor" "codeprose")
	     (:maintainer "Martin Yrjölä" . "martin.yrjola@gmail.com")
	     (:authors
	      ("Will Mengarini" . "seldon@eskimo.com"))
	     (:commit . "66b3902401059d161424b1b8d0abc3cb0a7d6df0"))])
 (dired-du .
	   [(0 5 2)
	    ((emacs
	      (24 4))
	     (cl-lib
	      (0 5)))
	    "Dired with recursive directory sizes" tar
	    ((:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	     (:authors
	      ("Tino Calancha" . "tino.calancha@gmail.com"))
	     (:keywords "files" "unix" "convenience")
	     (:url . "http://elpa.gnu.org/packages/dired-du.html"))])
 (dired-git-info .
		 [(0 3 1)
		  ((emacs
		    (25)))
		  "Show git info in dired" single
		  ((:keywords "dired" "files")
		   (:authors
		    ("Clemens Radermacher" . "clemera@posteo.net"))
		   (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		   (:url . "https://github.com/clemera/dired-git-info"))])
 (disk-usage .
	     [(1 3 3)
	      ((emacs
		(26 1)))
	      "Sort and browse disk usage listings" single
	      ((:keywords "files" "convenience" "tools")
	       (:authors
		("Pierre Neidhardt" . "mail@ambrevar.xyz"))
	       (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
	       (:url . "https://gitlab.com/Ambrevar/emacs-disk-usage"))])
 (dismal .
	 [(1 5 2)
	  ((cl-lib
	    (0))
	   (emacs
	    (24 3)))
	  "Dis Mode Ain't Lotus: Spreadsheet program Emacs" tar
	  ((:maintainer "UnMaintainer" . "emacs-devel@gnu.org")
	   (:authors
	    (nil . "David Fox, fox@cs.nyu.edu")
	    (nil . "Frank E. Ritter, ritter@cs.cmu.edu"))
	   (:url . "https://elpa.gnu.org/packages/dismal.html"))])
 (djvu .
       [(1 1 2)
	nil "Edit and view Djvu files via djvused" tar
	((:keywords "files" "wp")
	 (:maintainer "Roland Winkler" . "winkler@gnu.org")
	 (:authors
	  ("Roland Winkler" . "winkler@gnu.org"))
	 (:url . "https://elpa.gnu.org/packages/djvu.html")
	 (:commit . "071c8ab168588897475899c46eaa16e70141db8c"))])
 (docbook .
	  [(0 1)
	   nil "Info-like viewer for DocBook" single
	   ((:url . "http://elpa.gnu.org/packages/docbook.html")
	    (:keywords "docs" "help")
	    (:authors
	     ("Chong Yidong" . "cyd@gnu.org"))
	    (:maintainer "Chong Yidong" . "cyd@gnu.org"))])
 (dtache .
	 [(0 7)
	  ((emacs
	    (27 1))
	   (detached
	    (0 7)))
	  "A package to launch, and manage, dtache processes" tar
	  ((:url . "https://sr.ht/~niklaseklund/dtache.el/")
	   (:keywords "convenience" "processes")
	   (:maintainer "Niklas Eklund" . "niklas.eklund@posteo.net")
	   (:authors
	    ("Niklas Eklund" . "niklas.eklund@posteo.net"))
	   (:commit . "b194f96af4e6298fe086a844115ea23300be7166"))])
 (dts-mode .
	   [(1 0)
	    ((emacs
	      (24)))
	    "Major mode for Device Tree source files" tar
	    ((:keywords "languages")
	     (:maintainer "Ben Gamari" . "ben@smart-cactus.org")
	     (:authors
	      ("Ben Gamari" . "ben@smart-cactus.org"))
	     (:url . "https://elpa.gnu.org/packages/dts-mode.html")
	     (:commit . "8413d2dc9b3347831aa9e8c8b2524af3ef005441"))])
 (easy-escape .
	      [(0 2 1)
	       nil "Improve readability of escape characters in regular expressions" tar
	       ((:url . "https://github.com/cpitclaudel/easy-escape")
		(:keywords "convenience" "lisp" "tools")
		(:maintainer "Clément Pit-Claudel" . "clement.pitclaudel@live.com")
		(:authors
		 ("Clément Pit-Claudel" . "clement.pitclaudel@live.com")))])
 (easy-kill .
	    [(0 9 5)
	     ((emacs
	       (25))
	      (cl-lib
	       (0 5)))
	     "kill & mark things easily" tar
	     ((:url . "https://github.com/leoliu/easy-kill")
	      (:keywords "killing" "convenience")
	      (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	      (:authors
	       ("Leo Liu" . "sdl.web@gmail.com"))
	      (:commit . "f155d19c528e27f8f6c72f0d75f652edbdcab37f"))])
 (ebdb .
       [(0 8 14)
	((emacs
	  (25 1))
	 (seq
	  (2 15)))
	"Contact management package" tar
	((:url . "https://github.com/girzel/ebdb")
	 (:keywords "convenience" "mail")
	 (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	 (:authors
	  ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	 (:commit . "c98512ebb6984701bbf090f1eabedb120c51e7bd"))])
 (ebdb-gnorb .
	     [(1 0 2)
	      ((gnorb
		(1 1 0))
	       (ebdb
		(0 2)))
	      "Utilities for connecting EBDB to Gnorb" single
	      ((:url . "http://elpa.gnu.org/packages/ebdb-gnorb.html")
	       (:authors
		("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	       (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net"))])
 (ebdb-i18n-chn .
		[(1 3 2)
		 ((pyim
		   (1 6 0))
		  (ebdb
		   (0 6 17)))
		 "China-specific internationalization support for EBDB" tar
		 ((:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
		  (:authors
		   ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
		  (:url . "https://elpa.gnu.org/packages/ebdb-i18n-chn.html"))])
 (ediprolog .
	    [(2 1)
	     nil "Emacs Does Interactive Prolog" single
	     ((:keywords "languages" "processes")
	      (:authors
	       ("Markus Triska" . "triska@metalevel.at"))
	      (:maintainer "Markus Triska" . "triska@metalevel.at")
	      (:url . "https://www.metalevel.at/ediprolog/"))])
 (eev .
      [(20220626)
       ((emacs
	 (24 4)))
       "Support for e-scripts (eepitch blocks, elisp hyperlinks, etc)" tar
       ((:url . "http://angg.twu.net/#eev")
	(:keywords "lisp" "e-scripts")
	(:maintainer "Eduardo Ochs" . "eduardoochs@gmail.com")
	(:authors
	 ("Eduardo Ochs" . "eduardoochs@gmail.com"))
	(:commit . "3ef1f6af7e9d07c0ad2e330ae161061e57fd2a87"))])
 (eglot .
	[(1 8)
	 ((emacs
	   (26 1))
	  (jsonrpc
	   (1 0 14))
	  (flymake
	   (1 0 9))
	  (project
	   (0 3 0))
	  (xref
	   (1 0 1))
	  (eldoc
	   (1 11 0)))
	 "Client for Language Server Protocol (LSP) servers" tar
	 ((:url . "https://github.com/joaotavora/eglot")
	  (:keywords "convenience" "languages")
	  (:maintainer "João Távora" . "joaotavora@gmail.com")
	  (:authors
	   ("João Távora" . "joaotavora@gmail.com"))
	  (:commit . "132ea08f97f94ad2e050fc8d1628ecb41de7229a"))])
 (el-search .
	    [(1 12 6 1)
	     ((emacs
	       (25))
	      (stream
	       (2 2 4))
	      (cl-print
	       (1 0)))
	     "Expression based interactive search for Emacs Lisp" tar
	     ((:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	      (:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:keywords "lisp")
	      (:url . "http://elpa.gnu.org/packages/el-search.html"))])
 (eldoc .
	[(1 13 0)
	 ((emacs
	   (26 3)))
	 "Show function arglist or variable docstring in echo area" tar
	 ((:keywords "extensions")
	  (:maintainer "Noah Friedman" . "friedman@splode.com")
	  (:authors
	   ("Noah Friedman" . "friedman@splode.com"))
	  (:url . "https://elpa.gnu.org/packages/eldoc.html")
	  (:commit . "5f64ba0efbfcbb6dc44add191427aca504b4c3cd"))])
 (eldoc-eval .
	     [(0 2)
	      nil "Enable eldoc support when minibuffer is in use." tar
	      ((:maintainer "Thierry Volpiatto" . "thievol@posteo.net")
	       (:authors
		("Thierry Volpiatto" . "thievol@posteo.net"))
	       (:url . "https://elpa.gnu.org/packages/eldoc-eval.html")
	       (:commit . "e91800503c90cb75dc70abe42f1d6ae499346cc1"))])
 (electric-spacing .
		   [(5 0)
		    nil "Insert operators with surrounding spaces smartly" single
		    ((:url . "http://elpa.gnu.org/packages/electric-spacing.html")
		     (:authors
		      ("William Xu" . "william.xwl@gmail.com"))
		     (:maintainer "William Xu" . "william.xwl@gmail.com"))])
 (elisp-benchmarks .
		   [(1 14)
		    nil "elisp benchmarks collection" tar
		    ((:keywords "languages" "lisp")
		     (:maintainer "Andrea Corallo" . "akrl@sdf.org")
		     (:authors
		      ("Andrea Corallo" . "akrl@sdf.org"))
		     (:url . "https://elpa.gnu.org/packages/elisp-benchmarks.html")
		     (:commit . "70e38dbfa8f4acbdebfd0f417410d99f5031e05f"))])
 (embark .
	 [(0 17)
	  ((emacs
	    (26 1)))
	  "Conveniently act on minibuffer completions" tar
	  ((:url . "https://github.com/oantolin/embark")
	   (:keywords "convenience")
	   (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx")
	   (:authors
	    ("Omar Antolín Camarena" . "omar@matem.unam.mx"))
	   (:commit . "97270d725761ee02db461b45b18ec16ae31f203e"))])
 (embark-consult .
		 [(0 6)
		  ((emacs
		    (27 1))
		   (embark
		    (0 17))
		   (consult
		    (0 17)))
		  "Consult integration for Embark" tar
		  ((:url . "https://github.com/oantolin/embark")
		   (:keywords "convenience")
		   (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx")
		   (:authors
		    ("Omar Antolín Camarena" . "omar@matem.unam.mx"))
		   (:commit . "bd603d8f3b1bcff34aee2dc4b7b36dc7912b9b26"))])
 (emms .
       [(11)
	((cl-lib
	  (0 5))
	 (nadvice
	  (0 3))
	 (seq
	  (0)))
	"The Emacs Multimedia System" tar
	((:url . "https://www.gnu.org/software/emms/")
	 (:keywords "emms" "mp3" "ogg" "flac" "music" "mpeg" "video" "multimedia")
	 (:maintainer "Yoni Rabkin" . "yrk@gnu.org")
	 (:authors
	  ("Jorgen Schäfer" . "forcer@forcix.cx"))
	 (:commit . "9adffa2e362e3d93367f5f69be20d81b969ad00c"))])
 (engrave-faces .
		[(0 3 1)
		 ((emacs
		   (27 1)))
		 "Convert font-lock faces to other formats" tar
		 ((:url . "https://github.com/tecosaur/engrave-faces")
		  (:keywords "faces")
		  (:maintainer "TEC" . "tec@tecosaur.com")
		  (:authors
		   ("TEC <https://github/tecosaur>"))
		  (:commit . "fe29d9b593a0f7ada4df3f52dfb9f7f8c1bdaaa7"))])
 (enwc .
       [(2 0)
	((emacs
	  (25 1)))
	"The Emacs Network Client" tar
	((:url . "https://savannah.nongnu.org/p/enwc")
	 (:maintainer "Ian Dunn" . "dunni@gnu.org")
	 (:authors
	  ("Ian Dunn" . "dunni@gnu.org"))
	 (:keywords "external" "network" "wicd" "manager" "nm"))])
 (epoch-view .
	     [(0 0 1)
	      nil "Minor mode to visualize epoch timestamps" single
	      ((:url . "http://elpa.gnu.org/packages/epoch-view.html")
	       (:keywords "data" "timestamp" "epoch" "unix")
	       (:authors
		("Ted Zlatanov" . "tzz@lifelogs.com"))
	       (:maintainer "Ted Zlatanov" . "tzz@lifelogs.com"))])
 (erc .
      [(5 4 1)
       ((emacs
	 (27 1)))
       "An Emacs Internet Relay Chat client" tar
       ((:url . "https://www.gnu.org/software/emacs/erc.html")
	(:keywords "irc" "chat" "client" "internet")
	(:maintainer "Amin Bandali" . "bandali@gnu.org")
	(:authors
	 ("Alexander L. Belikoff" . "alexander@belikoff.net")))])
 (ergoemacs-mode .
		 [(5 16 10 12)
		  ((emacs
		    (24 1))
		   (undo-tree
		    (0 6 5))
		   (cl-lib
		    (0 5)))
		  "Emacs mode based on common modern interface and ergonomics." tar
		  ((:url . "https://github.com/ergoemacs/ergoemacs-mode")
		   (:maintainer "Matthew L. Fidler" . "matthew.fidler@gmail.com")
		   (:authors
		    ("Xah Lee" . "xah@xahlee.org")
		    ("David Capello" . "davidcapello@gmail.com")
		    ("Matthew L. Fidler" . "matthew.fidler@gmail.com"))
		   (:keywords "convenience"))])
 (excorporate .
	      [(1 0 0)
	       ((emacs
		 (24 1))
		(cl-lib
		 (0 6 1))
		(fsm
		 (0 2 1))
		(soap-client
		 (3 2 0))
		(url-http-ntlm
		 (2 0 4))
		(nadvice
		 (0 3)))
	       "Exchange Web Services (EWS) integration" tar
	       ((:url . "https://www.fitzsim.org/blog/")
		(:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
		(:authors
		 ("Thomas Fitzsimmons" . "fitzsim@fitzsim.org"))
		(:keywords "calendar"))])
 (expand-region .
		[(0 11 0)
		 nil "Increase selected region by semantic units." tar
		 ((:url . "https://github.com/magnars/expand-region.el")
		  (:maintainer "Magnar Sveen" . "magnars@gmail.com")
		  (:authors
		   ("Magnar Sveen" . "magnars@gmail.com"))
		  (:keywords "marking" "region"))])
 (exwm .
       [(0 26)
	((xelb
	  (0 18)))
	"Emacs X Window Manager" tar
	((:url . "https://github.com/ch11ng/exwm")
	 (:keywords "unix")
	 (:maintainer "Adrián Medraño Calvo" . "adrian@medranocalvo.com")
	 (:authors
	  ("Chris Feng" . "chris.w.feng@gmail.com")))])
 (f90-interface-browser .
			[(1 1)
			 nil "Parse and browse f90 interfaces" single
			 ((:authors
			   ("Lawrence Mitchell" . "wence@gmx.li"))
			  (:maintainer "Lawrence Mitchell" . "wence@gmx.li")
			  (:url . "http://github.com/wence-/f90-iface/"))])
 (filladapt .
	    [(2 12 2)
	     ((emacs
	       (24 4)))
	     "Adaptive fill" single
	     ((:url . "http://elpa.gnu.org/packages/filladapt.html")
	      (:authors
	       ("Kyle E. Jones" . "kyle_jones@wonderworks.com"))
	      (:maintainer nil . "emacs-devel@gnu.org"))])
 (flylisp .
	  [(0 2)
	   ((emacs
	     (24 1))
	    (cl-lib
	     (0 4)))
	   "Color unbalanced parentheses and parentheses inconsistent with indentation" single
	   ((:url . "http://elpa.gnu.org/packages/flylisp.html")
	    (:authors
	     ("Barry O'Reilly" . "gundaetiapo@gmail.com"))
	    (:maintainer "Barry O'Reilly" . "gundaetiapo@gmail.com"))])
 (flymake .
	  [(1 2 2)
	   ((emacs
	     (26 1))
	    (eldoc
	     (1 1 0))
	    (project
	     (0 7 1)))
	   "A universal on-the-fly syntax checker" tar
	   ((:keywords "c" "languages" "tools")
	    (:maintainer "João Távora" . "joaotavora@gmail.com")
	    (:authors
	     ("Pavel Kobyakov" . "pk_at_work@yahoo.com"))
	    (:url . "https://elpa.gnu.org/packages/flymake.html")
	    (:commit . "31af9bca99fa88350271e1a905c9b435eaec28cf"))])
 (flymake-proselint .
		    [(0 2 3)
		     ((emacs
		       (26 1)))
		     "Flymake backend for proselint" tar
		     ((:url . "https://github.com/manuel-uberti/flymake-proselint")
		      (:keywords "convenience")
		      (:maintainer "Manuel Uberti" . "manuel.uberti@inventati.org")
		      (:authors
		       ("Manuel Uberti" . "manuel.uberti@inventati.org")))])
 (fontaine .
	   [(0 3 0)
	    ((emacs
	      (27 1)))
	    "Set font configurations using presets" tar
	    ((:url . "https://git.sr.ht/~protesilaos/fontaine")
	     (:maintainer "Fontaine Development" . "~protesilaos/fontaine@lists.sr.ht")
	     (:authors
	      ("Protesilaos Stavrou" . "info@protesilaos.com"))
	     (:commit . "9635653b16070dc290a98832d2515fe02f0605ac"))])
 (frame-tabs .
	     [(1 1)
	      nil "show buffer tabs in side window" single
	      ((:url . "http://elpa.gnu.org/packages/frame-tabs.html")
	       (:keywords "frames" "tabs")
	       (:authors
		("Martin Rudalics" . "rudalics@gmx.at"))
	       (:maintainer "Martin Rudalics" . "rudalics@gmx.at"))])
 (frog-menu .
	    [(0 2 11)
	     ((emacs
	       (26))
	      (avy
	       (0 4))
	      (posframe
	       (0 4)))
	     "Quickly pick items from ad hoc menus" single
	     ((:keywords "convenience")
	      (:authors
	       ("Clemens Radermacher" . "clemera@posteo.net"))
	      (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
	      (:url . "https://github.com/clemera/frog-menu"))])
 (fsm .
      [(0 2 1)
       ((emacs
	 (24 1))
	(cl-lib
	 (0 5)))
       "state machine library" single
       ((:url . "http://elpa.gnu.org/packages/fsm.html")
	(:keywords "extensions")
	(:authors
	 ("Magnus Henoch" . "magnus.henoch@gmail.com"))
	(:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org"))])
 (ftable .
	 [(1 0)
	  ((emacs
	    (26 0)))
	  "Fill a table to fit in n columns" tar
	  ((:url . "https://github.com/casouri/ftable")
	   (:maintainer "Yuan Fu" . "casouri@gmail.com")
	   (:authors
	    ("Yuan Fu" . "casouri@gmail.com"))
	   (:keywords "convenience" "text" "table"))])
 (gcmh .
       [(0 2 1)
	((emacs
	  (24)))
	"the Garbage Collector Magic Hack" single
	((:keywords "internal")
	 (:authors
	  ("Andrea Corallo" . "akrl@sdf.org"))
	 (:maintainer nil . "akrl@sdf.org")
	 (:url . "https://gitlab.com/koral/gcmh"))])
 (ggtags .
	 [(0 9 0)
	  ((emacs
	    (25)))
	  "emacs frontend to GNU Global source code tagging system" tar
	  ((:url . "https://github.com/leoliu/ggtags")
	   (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	   (:authors
	    ("Leo Liu" . "sdl.web@gmail.com"))
	   (:keywords "tools" "convenience"))])
 (gited .
	[(0 6 0)
	 ((emacs
	   (24 4))
	  (cl-lib
	   (0 5)))
	 "Operate on Git branches like dired" tar
	 ((:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	  (:authors
	   ("Tino Calancha" . "tino.calancha@gmail.com"))
	  (:keywords "git" "vc" "convenience")
	  (:url . "http://elpa.gnu.org/packages/gited.html"))])
 (gle-mode .
	   [(1 1)
	    ((cl-lib
	      (0 5)))
	    "Major mode to edit Graphics Layout Engine files" single
	    ((:url . "http://elpa.gnu.org/packages/gle-mode.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (gnome-c-style .
		[(0 1)
		 nil "minor mode for editing GNOME-style C source code" tar
		 ((:maintainer "Daiki Ueno" . "ueno@gnu.org")
		  (:authors
		   ("Daiki Ueno" . "ueno@gnu.org"))
		  (:keywords "gnome" "c" "coding style")
		  (:url . "http://elpa.gnu.org/packages/gnome-c-style.html"))])
 (gnorb .
	[(1 6 10)
	 ((cl-lib
	   (0 5)))
	 "Glue code between Gnus, Org, and BBDB" tar
	 ((:keywords "mail" "org" "gnus" "bbdb" "todo" "task")
	  (:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	  (:authors
	   ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	  (:url . "https://elpa.gnu.org/packages/gnorb.html"))])
 (gnu-elpa .
	   [(1 1)
	    nil "Advertize GNU ELPA packages" tar
	    ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:url . "http://elpa.gnu.org/packages/gnu-elpa.html"))])
 (gnu-elpa-keyring-update .
			  [(2019 3)
			   nil "Update Emacs's GPG keyring for GNU ELPA" tar
			   ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
			    (:authors
			     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
			    (:keywords "maint" "tools")
			    (:url . "http://elpa.gnu.org/packages/gnu-elpa-keyring-update.html"))])
 (gnugo .
	[(3 1 2)
	 ((ascii-art-to-unicode
	   (1 5))
	  (xpm
	   (1 0 1))
	  (cl-lib
	   (0 5)))
	 "play GNU Go in a buffer" tar
	 ((:url . "https://www.gnuvola.org/software/gnugo/")
	  (:keywords "games" "processes")
	  (:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
	  (:authors
	   ("Thien-Thi Nguyen" . "ttn@gnu.org")))])
 (gnus-mock .
	    [(0 5)
	     nil "Mock Gnus installation for testing" tar
	     ((:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
	      (:authors
	       ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
	      (:url . "https://elpa.gnu.org/packages/gnus-mock.html"))])
 (gpastel .
	  [(0 5 0)
	   ((emacs
	     (25 1)))
	   "Integrates GPaste with the kill-ring" single
	   ((:keywords "tools")
	    (:authors
	     ("Damien Cassou" . "damien@cassou.me"))
	    (:maintainer "Damien Cassou" . "damien@cassou.me")
	    (:url . "https://gitlab.petton.fr/DamienCassou/desktop-environment"))])
 (greader .
	  [(0 1)
	   ((emacs
	     (25)))
	   "gnamù reader, a reader with espeak tts" tar
	   ((:maintainer "Michelangelo Rodriguez" . "michelangelo.rodriguez@gmail.com")
	    (:authors
	     ("Michelangelo Rodriguez" . "michelangelo.rodriguez@gmail.com"))
	    (:keywords "tools" "accessibility")
	    (:url . "http://elpa.gnu.org/packages/greader.html"))])
 (greenbar .
	   [(1 1)
	    nil "Mark comint output with \"greenbar\" background" single
	    ((:url . "http://elpa.gnu.org/packages/greenbar.html")
	     (:keywords "faces" "terminals")
	     (:authors
	      ("Michael R. Mauger" . "michael@mauger.com"))
	     (:maintainer "Michael R. Mauger" . "michael@mauger.com"))])
 (gtags-mode .
	     [(1 0)
	      ((emacs
		(28)))
	      "GNU Global integration with xref, project and imenu." tar
	      ((:url . "https://github.com/Ergus/gtags-mode")
	       (:keywords "xref" "project" "imenu" "gtags" "global")
	       (:maintainer "Jimmy Aguilar Mena")
	       (:authors
		("Jimmy Aguilar Mena"))
	       (:commit . "f108a46c6c03eb5e18c73a908c655071aa153a14"))])
 (guess-language .
		 [(0 0 1)
		  ((cl-lib
		    (0 5))
		   (emacs
		    (24))
		   (nadvice
		    (0 1)))
		  "Robust automatic language detection" single
		  ((:authors
		    ("Titus von der Malsburg" . "malsburg@posteo.de"))
		   (:maintainer "Titus von der Malsburg" . "malsburg@posteo.de")
		   (:url . "https://github.com/tmalsburg/guess-language.el"))])
 (heap .
       [(0 5)
	nil "Heap (a.k.a. priority queue) data structure" single
	((:keywords "extensions" "data structures" "heap" "priority queue")
	 (:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:url . "http://www.dr-qubit.org/emacs.php"))])
 (hiddenquote .
	      [(1 1)
	       ((emacs
		 (25 1)))
	       "Major mode for doing hidden quote puzzles" tar
	       ((:url . "http://mauroaranda.com/puzzles/hidden-quote-puzzle/")
		(:maintainer "Mauro Aranda" . "maurooaranda@gmail.com")
		(:authors
		 ("Mauro Aranda" . "maurooaranda@gmail.com"))
		(:keywords "games"))])
 (highlight-escape-sequences .
			     [(0 4)
			      nil "Highlight escape sequences" single
			      ((:keywords "convenience")
			       (:authors
				("Dmitry Gutov" . "dgutov@yandex.ru")
				("Pavel Matcula" . "dev.plvlml@gmail.com"))
			       (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
			       (:url . "https://github.com/dgutov/highlight-escape-sequences"))])
 (hook-helpers .
	       [(1 1 1)
		((emacs
		  (25 1)))
		"Anonymous, modifiable hook functions" tar
		((:url . "https://savannah.nongnu.org/projects/hook-helpers-el/")
		 (:maintainer "Ian Dunn" . "dunni@gnu.org")
		 (:authors
		  ("Ian Dunn" . "dunni@gnu.org"))
		 (:keywords "development" "hooks"))])
 (html5-schema .
	       [(0 1)
		nil "Add HTML5 schemas for use by nXML" tar
		((:url . "https://github.com/validator/validator")
		 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
		 (:authors
		  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		 (:keywords "html" "xml"))])
 (hydra .
	[(0 14 0)
	 ((cl-lib
	   (0 5)))
	 "Make bindings that stick around." tar
	 ((:url . "https://github.com/abo-abo/hydra")
	  (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	  (:authors
	   ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	  (:keywords "bindings"))])
 (hyperbole .
	    [(8 0 0)
	     ((emacs
	       (27 0)))
	     "GNU Hyperbole: The Everyday Hypertextual Information Manager" tar
	     ((:url . "http://www.gnu.org/software/hyperbole")
	      (:keywords "comm" "convenience" "files" "frames" "hypermedia" "languages" "mail" "matching" "mouse" "multimedia" "outlines" "tools" "wp")
	      (:maintainer "Bob Weiner <rsw@gnu.org>, Mats Lidell" . "matsl@gnu.org")
	      (:authors
	       ("Bob Weiner"))
	      (:commit . "4214716e06920a3e10db5811bd22a343ad6435d9"))])
 (ilist .
	[(0 1)
	 nil "Display a list in an ibuffer way." tar
	 ((:keywords "convenience")
	  (:maintainer "Durand" . "mmemmew@gmail.com")
	  (:authors
	   ("Durand" . "mmemmew@gmail.com"))
	  (:url . "https://elpa.gnu.org/packages/ilist.html"))])
 (inspector .
	    [(0 5)
	     ((emacs
	       (27)))
	     "Tool for inspection of Emacs Lisp objects." tar
	     ((:url . "https://github.com/mmontone/emacs-inspector")
	      (:keywords "debugging" "tool" "emacs-lisp" "development")
	      (:maintainer "Mariano Montone" . "marianomontone@gmail.com")
	      (:authors
	       ("Mariano Montone" . "marianomontone@gmail.com"))
	      (:commit . "69df4a49f3e8260c9a43c227960ead4d821341bc"))])
 (ioccur .
	 [(2 6)
	  ((emacs
	    (24))
	   (cl-lib
	    (0 5)))
	  "Incremental occur" tar
	  ((:url . "https://github.com/thierryvolpiatto/ioccur")
	   (:maintainer "Thierry Volpiatto" . "thievol@posteo.net")
	   (:authors
	    ("Thierry Volpiatto" . "thievol@posteo.net")))])
 (isearch-mb .
	     [(0 5)
	      ((emacs
		(27 1)))
	      "Control isearch from the minibuffer" tar
	      ((:url . "https://github.com/astoff/isearch-mb")
	       (:keywords "matching")
	       (:maintainer "Augusto Stoffel" . "arstoffel@gmail.com")
	       (:authors
		("Augusto Stoffel" . "arstoffel@gmail.com"))
	       (:commit . "e70ba8f594afef989006493dd71bd693a29e9f42"))])
 (iterators .
	    [(0 1 1)
	     ((emacs
	       (25)))
	     "Functions for working with iterators" single
	     ((:url . "http://elpa.gnu.org/packages/iterators.html")
	      (:keywords "extensions" "elisp")
	      (:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de"))])
 (ivy .
      [(0 13 4)
       ((emacs
	 (24 5)))
       "Incremental Vertical completYon" tar
       ((:url . "https://github.com/abo-abo/swiper")
	(:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	(:authors
	 ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	(:keywords "matching"))])
 (ivy-avy .
	  [(0 13 4)
	   ((emacs
	     (24 5))
	    (ivy
	     (0 13 4))
	    (avy
	     (0 5 0)))
	   "Avy integration for Ivy" tar
	   ((:url . "https://github.com/abo-abo/swiper")
	    (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	    (:authors
	     ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	    (:keywords "convenience"))])
 (ivy-explorer .
	       [(0 3 2)
		((emacs
		  (25))
		 (ivy
		  (0 10 0)))
		"Dynamic file browsing grid using ivy" single
		((:keywords "convenience" "files" "matching")
		 (:authors
		  ("Clemens Radermacher" . "clemera@posteo.net"))
		 (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
		 (:url . "https://github.com/clemera/ivy-explorer"))])
 (ivy-hydra .
	    [(0 13 5)
	     ((emacs
	       (24 5))
	      (ivy
	       (0 13 4))
	      (hydra
	       (0 14 0)))
	     "Additional key bindings for Ivy" tar
	     ((:url . "https://github.com/abo-abo/swiper")
	      (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	      (:authors
	       ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	      (:keywords "convenience"))])
 (ivy-posframe .
	       [(0 6 3)
		((emacs
		  (26 0))
		 (posframe
		  (1 0 0))
		 (ivy
		  (0 13 0)))
		"Using posframe to show Ivy" tar
		((:url . "https://github.com/tumashu/ivy-posframe")
		 (:keywords "abbrev" "convenience" "matching" "ivy")
		 (:maintainer "Feng Shu" . "tumashu@163.com")
		 (:authors
		  ("Feng Shu" . "tumashu@163.com")
		  ("Naoya Yamashita" . "conao3@gmail.com")))])
 (javaimp .
	  [(0 8)
	   nil "Add and reorder Java import statements in Maven/Gradle projects" tar
	   ((:keywords "java" "maven" "gradle" "programming")
	    (:maintainer "Filipp Gunbin" . "fgunbin@fastmail.fm")
	    (:authors
	     ("Filipp Gunbin" . "fgunbin@fastmail.fm"))
	    (:url . "https://elpa.gnu.org/packages/javaimp.html"))])
 (jgraph-mode .
	      [(1 1)
	       ((cl-lib
		 (0 5)))
	       "Major mode for Jgraph files" single
	       ((:url . "http://elpa.gnu.org/packages/jgraph-mode.html")
		(:keywords "tex" "wp")
		(:authors
		 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (js2-mode .
	   [(20220710)
	    ((emacs
	      (24 1))
	     (cl-lib
	      (0 5)))
	    "Improved JavaScript editing mode" tar
	    ((:url . "https://github.com/mooz/js2-mode/")
	     (:keywords "languages" "javascript")
	     (:maintainer "Steve Yegge" . "steve.yegge@gmail.com")
	     (:authors
	      ("Steve Yegge" . "steve.yegge@gmail.com")
	      ("mooz" . "stillpedant@gmail.com")
	      ("Dmitry Gutov" . "dgutov@yandex.ru"))
	     (:commit . "841cfec9570ae06a67a131997e2aff32340e81d7"))])
 (json-mode .
	    [(0 2)
	     ((emacs
	       (25 1)))
	     "Major mode for editing JSON files" single
	     ((:url . "http://elpa.gnu.org/packages/json-mode.html")
	      (:keywords "data")
	      (:authors
	       ("Simen Heggestøyl" . "simenheg@gmail.com"))
	      (:maintainer "Simen Heggestøyl" . "simenheg@gmail.com"))])
 (jsonrpc .
	  [(1 0 15)
	   ((emacs
	     (25 2)))
	   "JSON-RPC library" tar
	   ((:keywords "processes" "languages" "extensions")
	    (:maintainer "João Távora" . "joaotavora@gmail.com")
	    (:authors
	     ("João Távora" . "joaotavora@gmail.com"))
	    (:url . "https://elpa.gnu.org/packages/jsonrpc.html")
	    (:commit . "50654cf0b1bf6210fc8f46d8e7ae13bbeeccecb5"))])
 (jumpc .
	[(3 0)
	 nil "jump to previous insertion points" single
	 ((:url . "http://elpa.gnu.org/packages/jumpc.html")
	  (:authors
	   ("Ivan Kanis" . "ivan@kanis.fr"))
	  (:maintainer "Ivan Kanis" . "ivan@kanis.fr"))])
 (kind-icon .
	    [(0 1 6)
	     ((emacs
	       (27 1))
	      (svg-lib
	       (0)))
	     "Completion kind icons" tar
	     ((:url . "https://github.com/jdtsmith/kind-icon")
	      (:keywords "completion")
	      (:maintainer "J.D. Smith" . "jdtsmith@gmail.com")
	      (:authors
	       ("J.D. Smith" . "jdtsmith@gmail.com"))
	      (:commit . "f10bf6170769a1b0ef7d06347d1631fb6e71446b"))])
 (kiwix .
	[(1 1 5)
	 ((emacs
	   (25 1))
	  (request
	   (0 3 0)))
	 "Searching offline Wikipedia through Kiwix." tar
	 ((:url . "https://github.com/stardiviner/kiwix.el")
	  (:keywords "kiwix" "wikipedia")
	  (:maintainer "stardiviner" . "numbchild@gmail.com")
	  (:authors
	   ("stardiviner" . "numbchild@gmail.com")))])
 (kmb .
      [(0 1)
       ((emacs
	 (24 1)))
       "Kill buffers matching a regexp w/o confirmation" single
       ((:url . "http://elpa.gnu.org/packages/kmb.html")
	(:keywords "lisp" "convenience")
	(:authors
	 ("Tino Calancha" . "tino.calancha@gmail.com"))
	(:maintainer "Tino Calancha" . "tino.calancha@gmail.com"))])
 (landmark .
	   [(1 0)
	    nil "Neural-network robot that learns landmarks" single
	    ((:url . "http://elpa.gnu.org/packages/landmark.html")
	     (:keywords "games" "neural network" "adaptive search" "chemotaxis")
	     (:authors
	      ("Terrence Brannon" . "metaperl@gmail.com"))
	     (:maintainer nil . "emacs-devel@gnu.org"))])
 (leaf .
       [(4 5 5)
	((emacs
	  (24 1)))
	"Simplify your init.el configuration, extended use-package" tar
	((:url . "https://github.com/conao3/leaf.el")
	 (:keywords "lisp" "settings")
	 (:maintainer "Naoya Yamashita" . "conao3@gmail.com")
	 (:authors
	  ("Naoya Yamashita" . "conao3@gmail.com"))
	 (:commit . "7cc38f9739eadc569b1179fabe7f7893167105da"))])
 (let-alist .
   [(1 0 6)
    ((emacs
      (24 1)))
    "Easily let-bind values of an assoc-list by their names" single
    ((:url . "http://elpa.gnu.org/packages/let-alist.html")
     (:keywords "extensions" "lisp")
     (:authors
      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (lex .
      [(1 1)
       nil "Lexical analyser construction" tar
       ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	(:authors
	 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	(:url . "http://elpa.gnu.org/packages/lex.html"))])
 (lin .
      [(0 4 0)
       ((emacs
	 (27 1)))
       "Make `hl-line-mode' more suitable for selection UIs" tar
       ((:url . "https://git.sr.ht/~protesilaos/lin")
	(:keywords "convenience" "faces" "theme")
	(:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
	(:authors
	 ("Protesilaos Stavrou" . "info@protesilaos.com"))
	(:commit . "6d2493ce0b7e0891b85e03e103ddd5c68aeb60a6"))])
 (lmc .
      [(1 4)
       ((emacs
	 (24))
	(cl-lib
	 (0 5)))
       "Little Man Computer in Elisp" single
       ((:url . "http://elpa.gnu.org/packages/lmc.html")
	(:authors
	 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (load-dir .
	   [(0 0 5)
	    ((cl-lib
	      (0 5)))
	    "Load all Emacs Lisp files in a given directory" single
	    ((:url . "http://elpa.gnu.org/packages/load-dir.html")
	     (:keywords "lisp" "files" "convenience")
	     (:maintainer "Teodor Zlatanov" . "tzz@lifelogs.com"))])
 (load-relative .
		[(1 3 1)
		 nil "Relative file load (within a multi-file Emacs package)" single
		 ((:keywords "internal")
		  (:authors
		   ("Rocky Bernstein" . "rocky@gnu.org"))
		  (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		  (:url . "http://github.com/rocky/emacs-load-relative"))])
 (loc-changes .
	      [(1 2)
	       nil "keep track of positions even after buffer changes" single
	       ((:authors
		 ("Rocky Bernstein" . "rocky@gnu.org"))
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:url . "http://github.com/rocky/emacs-loc-changes"))])
 (loccur .
	 [(1 2 4)
	  ((emacs
	    (24 3)))
	  "Perform an occur-like folding in current buffer" single
	  ((:keywords "matching")
	   (:authors
	    ("Alexey Veretennikov" . "alexey.veretennikov@gmail.com"))
	   (:maintainer "Alexey Veretennikov" . "alexey.veretennikov@gmail.com")
	   (:url . "https://github.com/fourier/loccur"))])
 (logos .
	[(0 4 0)
	 ((emacs
	   (27 1)))
	 "Simple focus mode and extras" tar
	 ((:url . "https://git.sr.ht/~protesilaos/logos")
	  (:keywords "convenience" "focus" "writing" "presentation" "narrowing")
	  (:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
	  (:authors
	   ("Protesilaos Stavrou" . "info@protesilaos.com"))
	  (:commit . "388bfbd9d8c880898d1832e888d5b41582dd1a85"))])
 (map .
      [(3 2 1)
       ((emacs
	 (26)))
       "Map manipulation functions" tar
       ((:keywords "extensions" "lisp")
	(:maintainer nil . "emacs-devel@gnu.org")
	(:authors
	 ("Nicolas Petton" . "nicolas@petton.fr"))
	(:url . "https://elpa.gnu.org/packages/map.html")
	(:commit . "fa92b040c6738de7278605cadeace0c5380a0814"))])
 (marginalia .
	     [(0 13)
	      ((emacs
		(26 1)))
	      "Enrich existing commands with completion annotations" tar
	      ((:url . "https://github.com/minad/marginalia")
	       (:maintainer "Omar Antolín Camarena <omar@matem.unam.mx>, Daniel Mendler" . "mail@daniel-mendler.de")
	       (:authors
		("Omar Antolín Camarena <omar@matem.unam.mx>, Daniel Mendler" . "mail@daniel-mendler.de"))
	       (:commit . "bd98c02720bc59a5c185c293f60595d06dfd7637"))])
 (markchars .
	    [(0 2 2)
	     nil "Mark chars fitting certain characteristics" single
	     ((:url . "http://elpa.gnu.org/packages/markchars.html")
	      (:authors
	       ("Lennart Borgman" . "lennart.borgman@gmail.com"))
	      (:maintainer "Lennart Borgman" . "lennart.borgman@gmail.com"))])
 (math-symbol-lists .
		    [(1 2 1)
		     nil "Lists of Unicode math symbols and latex commands" single
		     ((:keywords "unicode" "symbols" "mathematics")
		      (:authors
		       ("Vitalie Spinu" . "spinuvit@gmail.com"))
		      (:maintainer "Vitalie Spinu" . "spinuvit@gmail.com")
		      (:url . "https://github.com/vspinu/math-symbol-lists"))])
 (mct .
      [(0 5 0)
       ((emacs
	 (27 1)))
       "Minibuffer and Completions in Tandem" tar
       ((:url . "https://gitlab.com/protesilaos/mct")
	(:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
	(:authors
	 ("Protesilaos Stavrou" . "info@protesilaos.com"))
	(:commit . "680d7727216ed05ba58e7d2f04a046d1f27cf3e9"))])
 (memory-usage .
	       [(0 2)
		nil "Analyze the memory usage of Emacs in various ways" single
		((:url . "http://elpa.gnu.org/packages/memory-usage.html")
		 (:keywords "maint")
		 (:authors
		  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (metar .
	[(0 3)
	 ((cl-lib
	   (0 5)))
	 "Retrieve and decode METAR weather information" single
	 ((:url . "http://elpa.gnu.org/packages/metar.html")
	  (:keywords "comm")
	  (:authors
	   ("Mario Lang" . "mlang@delysid.org"))
	  (:maintainer "Mario Lang" . "mlang@delysid.org"))])
 (midi-kbd .
	   [(0 2)
	    ((emacs
	      (25)))
	    "Create keyboard events from Midi input" single
	    ((:url . "http://elpa.gnu.org/packages/midi-kbd.html")
	     (:keywords "convenience" "hardware" "multimedia")
	     (:authors
	      ("David Kastrup" . "dak@gnu.org"))
	     (:maintainer "David Kastrup" . "dak@gnu.org"))])
 (mines .
	[(1 6)
	 ((emacs
	   (24 4))
	  (cl-lib
	   (0 5)))
	 "Minesweeper game" tar
	 ((:url . "https://github.com/calancha/Minesweeper")
	  (:maintainer "Tino Calancha" . "tino.calancha@gmail.com")
	  (:authors
	   ("Tino Calancha" . "tino.calancha@gmail.com"))
	  (:keywords "games"))])
 (minibuffer-line .
		  [(0 1)
		   nil "Display status info in the minibuffer window" single
		   ((:url . "http://elpa.gnu.org/packages/minibuffer-line.html")
		    (:authors
		     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		    (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (minimap .
	  [(1 4)
	   nil "Sidebar showing a \"mini-map\" of a buffer" single
	   ((:url . "http://elpa.gnu.org/packages/minimap.html")
	    (:authors
	     ("David Engster" . "deng@randomsample.de"))
	    (:maintainer "David Engster" . "deng@randomsample.de"))])
 (mmm-mode .
	   [(0 5 8)
	    ((cl-lib
	      (0 2)))
	    "Allow Multiple Major Modes in a buffer" tar
	    ((:url . "https://github.com/purcell/mmm-mode")
	     (:maintainer "Dmitry Gutov" . "dgutov@yandex.ru")
	     (:authors
	      ("Michael Abraham Shulman" . "viritrilbia@gmail.com"))
	     (:keywords "convenience" "faces" "languages" "tools"))])
 (modus-operandi-theme .
		       [(0 13 2)
			((emacs
			  (26 1))
			 (modus-themes
			  (1 2 4)))
			"Accessible light theme (WCAG AAA) [DEPRECATED]" tar
			((:url . "https://gitlab.com/protesilaos/modus-themes")
			 (:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
			 (:authors
			  ("Protesilaos Stavrou" . "info@protesilaos.com"))
			 (:keywords "faces" "theme" "accessibility"))])
 (modus-themes .
	       [(2 4 1)
		((emacs
		  (27 1)))
		"Elegant, highly legible and customizable themes" tar
		((:url . "https://git.sr.ht/~protesilaos/modus-themes")
		 (:keywords "faces" "theme" "accessibility")
		 (:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
		 (:authors
		  ("Protesilaos Stavrou" . "info@protesilaos.com"))
		 (:commit . "e3ec91232fcdd4d7fe2c48fcdb78b4ac7c6356d5"))])
 (modus-vivendi-theme .
		      [(0 13 2)
		       ((emacs
			 (26 1))
			(modus-themes
			 (1 2 4)))
		       "Accessible dark theme (WCAG AAA) [DEPRECATED]" tar
		       ((:url . "https://gitlab.com/protesilaos/modus-themes")
			(:maintainer "Protesilaos Stavrou" . "info@protesilaos.com")
			(:authors
			 ("Protesilaos Stavrou" . "info@protesilaos.com"))
			(:keywords "faces" "theme" "accessibility"))])
 (multi-mode .
	     [(1 14)
	      nil "support for multiple major modes" tar
	      ((:url . "http://www.loveshack.ukfsn.org/emacs")
	       (:keywords "languages" "extensions" "files")
	       (:maintainer "Dave Love" . "fx@gnu.org")
	       (:authors
		("Dave Love" . "fx@gnu.org")))])
 (multishell .
	     [(1 1 10)
	      ((cl-lib
		(0 5)))
	      "Organize use of multiple shell buffers, local and remote" tar
	      ((:url . "https://github.com/kenmanheimer/EmacsMultishell")
	       (:keywords "processes")
	       (:maintainer "Ken Manheimer" . "ken.manheimer@gmail.com")
	       (:authors
		("Ken Manheimer" . "ken.manheimer@gmail.com"))
	       (:commit . "aa1433b8df6d950e8592c7e878922b4ec5374569"))])
 (muse .
       [(3 20 2)
	nil "Authoring and publishing tool for Emacs" tar
	((:url . "http://mwolson.org/projects/EmacsMuse.html")
	 (:maintainer "Michael Olson" . "mwolson@gnu.org")
	 (:authors
	  ("John Wiegley" . "johnw@gnu.org"))
	 (:keywords "hypermedia"))])
 (myers .
	[(0 1)
	 ((emacs
	   (25)))
	 "Random-access singly-linked lists" single
	 ((:url . "http://elpa.gnu.org/packages/myers.html")
	  (:keywords "list" "containers")
	  (:authors
	   ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	  (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (nadvice .
	  [(0 3)
	   nil "Forward compatibility for Emacs-24.4's nadvice" single
	   ((:url . "http://elpa.gnu.org/packages/nadvice.html")
	    (:authors
	     ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	    (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (nameless .
	   [(1 0 2)
	    ((emacs
	      (24 4)))
	    "Hide package namespace in your emacs-lisp code" single
	    ((:keywords "convenience" "lisp")
	     (:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	     (:url . "https://github.com/Malabarba/nameless"))])
 (names .
	[(20151201 0)
	 ((emacs
	   (24 1))
	  (cl-lib
	   (0 5))
	  (nadvice
	   (0 3)))
	 "Namespaces for emacs-lisp. Avoid name clobbering without hiding symbols." tar
	 ((:url . "https://github.com/Malabarba/names")
	  (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	  (:authors
	   ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	  (:keywords "extensions" "lisp"))])
 (nano-agenda .
	      [(0 2 1)
	       ((emacs
		 (27 1)))
	       "N Λ N O agenda" tar
	       ((:url . "https://github.com/rougier/nano-agenda")
		(:keywords "convenience" "org-mode" "org-agenda")
		(:maintainer "Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr"))])
 (nano-modeline .
		[(0 7 1)
		 ((emacs
		   (27 1)))
		 "N Λ N O modeline" tar
		 ((:url . "https://github.com/rougier/nano-modeline")
		  (:keywords "convenience" "mode-line" "header-line")
		  (:maintainer "Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr")
		  (:commit . "823161c8894996e5c8375249f467a422579a2947"))])
 (nano-theme .
	     [(0 3 1)
	      ((emacs
		(27 1)))
	      "N Λ N O theme" tar
	      ((:url . "https://github.com/rougier/nano-theme")
	       (:keywords "theme" "dark" "light")
	       (:maintainer "Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr")
	       (:commit . "c4f296d349cf5ef2efd88d68535a4dbf577b9a87"))])
 (nftables-mode .
		[(1 1)
		 ((emacs
		   (25 1)))
		 "Major mode for editing nftables" tar
		 ((:keywords "convenience")
		  (:maintainer nil . "emacs-devel@gnu.org")
		  (:authors
		   ("Trent W. Buck" . "trentbuck@gmail.com"))
		  (:url . "https://elpa.gnu.org/packages/nftables-mode.html")
		  (:commit . "05600129ee8ea0774c6ac446a2bd18fc1dde54eb"))])
 (nhexl-mode .
	     [(1 5)
	      ((emacs
		(24 4))
	       (cl-lib
		(0 5)))
	      "Minor mode to edit files via hex-dump format" single
	      ((:url . "http://elpa.gnu.org/packages/nhexl-mode.html")
	       (:keywords "data")
	       (:authors
		("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	       (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (nlinum .
	 [(1 9)
	  nil "Show line numbers in the margin" single
	  ((:url . "http://elpa.gnu.org/packages/nlinum.html")
	   (:keywords "convenience")
	   (:authors
	    ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	   (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (notes-mode .
	     [(1 30)
	      nil "Indexing system for on-line note-taking" tar
	      ((:maintainer nil . "<johnh@isi.edu>.")
	       (:authors
		(nil . "<johnh@isi.edu>."))
	       (:url . "http://elpa.gnu.org/packages/notes-mode.html"))])
 (ntlm .
       [(2 1 0)
	nil "NTLM (NT LanManager) authentication support" single
	((:url . "http://elpa.gnu.org/packages/ntlm.html")
	 (:keywords "ntlm" "sasl" "comm")
	 (:authors
	  ("Taro Kawagishi" . "tarok@transpulse.org"))
	 (:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org"))])
 (num3-mode .
	    [(1 3)
	     nil "highlight groups of digits in long numbers" single
	     ((:url . "http://elpa.gnu.org/packages/num3-mode.html")
	      (:keywords "faces" "minor-mode")
	      (:authors
	       ("Felix Lee <felix8a@gmail.com>, Michal Nazarewicz" . "mina86@mina86.com"))
	      (:maintainer "Michal Nazarewicz" . "mina86@mina86.com"))])
 (oauth2 .
	 [(0 16)
	  ((cl-lib
	    (0 5))
	   (nadvice
	    (0 3)))
	  "OAuth 2.0 Authorization Protocol" tar
	  ((:maintainer "Julien Danjou" . "julien@danjou.info")
	   (:authors
	    ("Julien Danjou" . "julien@danjou.info"))
	   (:keywords "comm")
	   (:url . "https://elpa.gnu.org/packages/oauth2.html"))])
 (ob-haxe .
	  [(1 0)
	   nil "org-babel functions for haxe evaluation" tar
	   ((:url . "https://orgmode.org")
	    (:maintainer "Ian Martins" . "ianxm@jhu.edu")
	    (:authors
	     ("Ian Martins" . "ianxm@jhu.edu"))
	    (:keywords "literate programming" "reproducible research"))])
 (objed .
	[(0 8 3)
	 ((emacs
	   (25))
	  (cl-lib
	   (0 5)))
	 "Navigate and edit text objects." tar
	 ((:url . "https://github.com/clemera/objed")
	  (:maintainer "Clemens Radermacher" . "clemera@posteo.net")
	  (:authors
	   ("Clemens Radermacher" . "clemera@posteo.net"))
	  (:keywords "convenience"))])
 (omn-mode .
	   [(1 2)
	    nil "Support for OWL Manchester Notation" single
	    ((:url . "http://elpa.gnu.org/packages/omn-mode.html")
	     (:authors
	      ("Phillip Lord" . "phillip.lord@newcastle.ac.uk"))
	     (:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk"))])
 (on-screen .
	    [(1 3 3)
	     ((cl-lib
	       (0)))
	     "guide your eyes while scrolling" single
	     ((:keywords "convenience")
	      (:authors
	       ("Michael Heerdegen" . "michael_heerdegen@web.de"))
	      (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de")
	      (:url . "https://github.com/michael-heerdegen/on-screen.el"))])
 (orderless .
	    [(0 7)
	     ((emacs
	       (26 1)))
	     "Completion style for matching regexps in any order" tar
	     ((:url . "https://github.com/oantolin/orderless")
	      (:keywords "extensions")
	      (:maintainer "Omar Antolín Camarena" . "omar@matem.unam.mx")
	      (:authors
	       ("Omar Antolín Camarena" . "omar@matem.unam.mx"))
	      (:commit . "92008e762b30cb445a2227e458cbb9a5e1b1d4e8"))])
 (org .
      [(9 5 4)
       ((emacs
	 (25 1)))
       "Outline-based notes management and organizer" tar
       ((:url . "https://orgmode.org")
	(:keywords "outlines" "hypermedia" "calendar" "wp")
	(:maintainer "Bastien Guerry" . "bzg@gnu.org")
	(:authors
	 ("Carsten Dominik" . "carsten.dominik@gmail.com"))
	(:commit . "e0b05b07528dea684f3439c017370436b8d37b50"))])
 (org-edna .
	   [(1 1 2)
	    ((emacs
	      (25 1))
	     (seq
	      (2 19))
	     (org
	      (9 0 5)))
	    "Extensible Dependencies 'N' Actions" tar
	    ((:url . "https://savannah.nongnu.org/projects/org-edna-el/")
	     (:maintainer "Ian Dunn" . "dunni@gnu.org")
	     (:authors
	      ("Ian Dunn" . "dunni@gnu.org"))
	     (:keywords "convenience" "text" "org"))])
 (org-modern .
	     [(0 4)
	      ((emacs
		(27 1)))
	      "Modern looks for Org" tar
	      ((:url . "https://github.com/minad/org-modern")
	       (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	       (:authors
		("Daniel Mendler" . "mail@daniel-mendler.de"))
	       (:commit . "5de3da1ff55b4567e9df3b234c09427aed2cbcd7"))])
 (org-notify .
	     [(0 1 0)
	      ((emacs
		(25 1)))
	      "Notifications for Org-mode" tar
	      ((:url . "https://github.com/p-m/org-notify")
	       (:keywords "notification" "todo-list" "alarm" "reminder" "pop-up" "calendar")
	       (:maintainer "Peter Münster" . "pmrb@free.fr")
	       (:authors
		("Peter Münster" . "pmrb@free.fr"))
	       (:commit . "3a9c55aabdd1204f032fc02fd64ef643e0f19ae6"))])
 (org-real .
	   [(1 0 5)
	    ((emacs
	      (26 1))
	     (boxy
	      (1 0))
	     (org
	      (9 3)))
	    "Keep track of real things as org-mode links" tar
	    ((:url . "https://gitlab.com/tygrdev/org-real")
	     (:keywords "tools")
	     (:maintainer "Tyler Grinn" . "tylergrinn@gmail.com")
	     (:authors
	      ("Tyler Grinn" . "tylergrinn@gmail.com"))
	     (:commit . "435f6361207cf98bb1c5f4c8e8a987005ba21d41"))])
 (org-remark .
	     [(1 0 5)
	      ((emacs
		(27 1))
	       (org
		(9 4)))
	      "Highlight & annotate any text files" tar
	      ((:url . "https://github.com/nobiot/org-remark")
	       (:keywords "org-mode" "annotation" "writing" "note-taking" "marginal-notes")
	       (:maintainer "Noboru Ota" . "me@nobiot.com")
	       (:authors
		("Noboru Ota" . "me@nobiot.com"))
	       (:commit . "576e5680682bfb80a50b057b8752e0674d766f8d"))])
 (org-transclusion .
		   [(1 3 0)
		    ((emacs
		      (27 1))
		     (org
		      (9 4)))
		    "Transclude text content via links" tar
		    ((:url . "https://github.com/nobiot/org-transclusion")
		     (:keywords "org-mode" "transclusion" "writing")
		     (:maintainer "Noboru Ota" . "me@nobiot.com")
		     (:authors
		      ("Noboru Ota" . "me@nobiot.com"))
		     (:commit . "5cb94542e18722bf72a281441e944a8039b5301f"))])
 (org-translate .
		[(0 1 4)
		 ((emacs
		   (27 1))
		  (org
		   (9 1)))
		 "Org-based translation environment" tar
		 ((:maintainer "Eric Abrahamsen" . "eric@ericabrahamsen.net")
		  (:authors
		   ("Eric Abrahamsen" . "eric@ericabrahamsen.net"))
		  (:url . "https://elpa.gnu.org/packages/org-translate.html")
		  (:commit . "bdc5d169ef0c502f46aa673918ccf34fcc8415f2"))])
 (orgalist .
	   [(1 13)
	    ((emacs
	      (24 4)))
	    "Manage Org-like lists in non-Org buffers" single
	    ((:url . "http://elpa.gnu.org/packages/orgalist.html")
	     (:keywords "convenience")
	     (:authors
	      ("Nicolas Goaziou" . "mail@nicolasgoaziou.fr"))
	     (:maintainer "Nicolas Goaziou" . "mail@nicolasgoaziou.fr"))])
 (osc .
      [(0 4)
       nil "Open Sound Control protocol library" tar
       ((:maintainer "Mario Lang" . "mlang@blind.guru")
	(:authors
	 ("Mario Lang" . "mlang@blind.guru"))
	(:keywords "comm" "processes" "multimedia")
	(:url . "https://elpa.gnu.org/packages/osc.html"))])
 (osm .
      [(0 8)
       ((emacs
	 (27 1)))
       "OpenStreetMap viewer" tar
       ((:url . "https://github.com/minad/osm")
	(:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	(:authors
	 ("Daniel Mendler" . "mail@daniel-mendler.de"))
	(:commit . "563d9646b1f8df37cefcec5d51d20249eba407da"))])
 (other-frame-window .
		     [(1 0 6)
		      ((emacs
			(24 4)))
		      "Minor mode to enable global prefix keys for other frame/window buffer placement" single
		      ((:url . "http://elpa.gnu.org/packages/other-frame-window.html")
		       (:keywords "frame" "window")
		       (:authors
			("Stephen Leake" . "stephen_leake@member.fsf.org"))
		       (:maintainer "Stephen Leake" . "stephen_leake@member.fsf.org"))])
 (pabbrev .
	  [(4 2 2)
	   nil "Predictive abbreviation expansion" tar
	   ((:maintainer "Phillip Lord" . "phillip.lord@newcastle.ac.uk")
	    (:authors
	     ("Phillip Lord" . "phillip.lord@newcastle.ac.uk"))
	    (:url . "https://elpa.gnu.org/packages/pabbrev.html")
	    (:commit . "6de1b9e4b57b9e1a4d598d11f4476db9ee870637"))])
 (paced .
	[(1 1 3)
	 ((emacs
	   (25 1))
	  (async
	   (1 9 1)))
	 "Predictive Abbreviation Completion and Expansion using Dictionaries" tar
	 ((:url . "https://savannah.nongnu.org/projects/paced-el/")
	  (:maintainer "Ian Dunn" . "dunni@gnu.org")
	  (:authors
	   ("Ian Dunn" . "dunni@gnu.org"))
	  (:keywords "convenience" "completion"))])
 (parsec .
	 [(0 1 3)
	  ((emacs
	    (24))
	   (cl-lib
	    (0 5)))
	  "Parser combinator library" tar
	  ((:url . "https://github.com/cute-jumper/parsec.el")
	   (:maintainer "Junpeng Qiu" . "qjpchmail@gmail.com")
	   (:authors
	    ("Junpeng Qiu" . "qjpchmail@gmail.com"))
	   (:keywords "extensions"))])
 (parser-generator .
		   [(0 1 6)
		    ((emacs
		      (26)))
		    "Parser Generator library" tar
		    ((:url . "https://github.com/cjohansson/emacs-parser-generator")
		     (:keywords "tools" "convenience")
		     (:maintainer "Christian Johansson" . "christian@cvj.se")
		     (:authors
		      ("Christian Johansson" . "christian@cvj.se"))
		     (:commit . "db91a5f203ac39bcdfcd5276d3488394361c7f90"))])
 (path-iterator .
		[(1 0)
		 ((emacs
		   (25 0)))
		 "An iterator for traversing a directory path." tar
		 ((:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
		  (:authors
		   ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
		  (:url . "http://elpa.gnu.org/packages/path-iterator.html"))])
 (peg .
      [(1 0)
       ((emacs
	 (25)))
       "Parsing Expression Grammars in Emacs Lisp" tar
       ((:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	(:authors
	 ("Helmut Eller" . "eller.helmut@gmail.com"))
	(:url . "http://elpa.gnu.org/packages/peg.html"))])
 (persist .
	  [(0 4)
	   nil "Persist Variables between Emacs Sessions" tar
	   ((:maintainer "Phillip Lord" . "phillip.lord@russet.org.uk")
	    (:authors
	     ("Phillip Lord" . "phillip.lord@russet.org.uk"))
	    (:url . "http://elpa.gnu.org/packages/persist.html"))])
 (phps-mode .
	    [(0 4 22)
	     ((emacs
	       (26)))
	     "Major mode for PHP with code intelligence" tar
	     ((:url . "https://github.com/cjohansson/emacs-phps-mode")
	      (:keywords "tools" "convenience")
	      (:maintainer "Christian Johansson" . "christian@cvj.se")
	      (:authors
	       ("Christian Johansson" . "christian@cvj.se"))
	      (:commit . "69d4de374b1696bebf1fda5c9f8e1652b1b0fe2b"))])
 (pinentry .
	   [(0 1)
	    nil "GnuPG Pinentry server implementation" single
	    ((:url . "http://elpa.gnu.org/packages/pinentry.html")
	     (:keywords "gnupg")
	     (:authors
	      ("Daiki Ueno" . "ueno@gnu.org"))
	     (:maintainer "Daiki Ueno" . "ueno@gnu.org"))])
 (plz .
      [(0 2)
       ((emacs
	 (26 3)))
       "HTTP library" tar
       ((:url . "https://github.com/alphapapa/plz.el")
	(:keywords "comm" "network" "http")
	(:maintainer "Adam Porter" . "adam@alphapapa.net")
	(:authors
	 ("Adam Porter" . "adam@alphapapa.net"))
	(:commit . "9e9a370830a879592a4c6c9e66a5e9ec9f27d698"))])
 (poker .
	[(0 2)
	 nil "Texas hold 'em poker" single
	 ((:url . "http://elpa.gnu.org/packages/poker.html")
	  (:keywords "games")
	  (:authors
	   ("Mario Lang" . "mlang@delysid.org"))
	  (:maintainer "Mario Lang" . "mlang@delysid.org"))])
 (posframe .
	   [(1 1 7)
	    ((emacs
	      (26 1)))
	    "Pop a posframe (just a frame) at point" tar
	    ((:url . "https://github.com/tumashu/posframe")
	     (:keywords "convenience" "tooltip")
	     (:maintainer "Feng Shu" . "tumashu@163.com")
	     (:authors
	      ("Feng Shu" . "tumashu@163.com"))
	     (:commit . "c91d4d53fa479ceb604071008ce0a901770eff57"))])
 (project .
	  [(0 8 1)
	   ((emacs
	     (26 1))
	    (xref
	     (1 0 2)))
	   "Operations on the current project" tar
	   ((:url . "https://elpa.gnu.org/packages/project.html")
	    (:commit . "6bf29072e968401f842789c71468e624e5c913a9"))])
 (psgml .
	[(1 3 4)
	 nil "SGML-editing mode with parsing support" tar
	 ((:maintainer "Lennart Staflin" . "lstaflin@gmail.com")
	  (:authors
	   ("Lennart Staflin" . "lenst@lysator.liu.se")
	   ("James Clark" . "jjc@clark.com"))
	  (:keywords "languages")
	  (:url . "http://elpa.gnu.org/packages/psgml.html"))])
 (pspp-mode .
	    [(1 1)
	     nil "Major mode for editing PSPP files" single
	     ((:url . "http://elpa.gnu.org/packages/pspp-mode.html")
	      (:keywords "pspp" "major-mode")
	      (:authors
	       ("Scott Andrew Borton" . "scott@pp.htv.fi"))
	      (:maintainer "John Darrington" . "john@darrington.wattle.id.au"))])
 (pulsar .
	 [(0 4 0)
	  ((emacs
	    (27 1)))
	  "Pulse highlight on demand or after select functions" tar
	  ((:url . "https://git.sr.ht/~protesilaos/pulsar")
	   (:keywords "convenience" "pulse" "highlight")
	   (:maintainer "Pulsar Development" . "~protesilaos/pulsar@lists.sr.ht")
	   (:authors
	    ("Protesilaos Stavrou" . "info@protesilaos.com"))
	   (:commit . "1b91e34af63240fcfc02e267d740a78590f1f2de"))])
 (pyim .
       [(5 2 3)
	((emacs
	  (25 1))
	 (async
	  (1 6))
	 (xr
	  (1 13)))
	"A Chinese input method support quanpin, shuangpin, wubi, cangjie and rime." tar
	((:url . "https://github.com/tumashu/pyim")
	 (:keywords "convenience" "chinese" "pinyin" "input-method")
	 (:maintainer "Feng Shu" . "tumashu@163.com")
	 (:authors
	  ("Ye Wenbin" . "wenbinye@163.com")
	  ("Feng Shu" . "tumashu@163.com"))
	 (:commit . "3d9d16b578a1136ef344b61db5f0d55cefcf4164"))])
 (pyim-basedict .
		[(0 5 4)
		 nil "The default pinyin dict of pyim" tar
		 ((:url . "https://github.com/tumashu/pyim-basedict")
		  (:keywords "convenience" "chinese" "pinyin" "input-method" "complete")
		  (:maintainer "Feng Shu" . "tumashu@163.com")
		  (:authors
		   ("Feng Shu" . "tumashu@163.com"))
		  (:commit . "d61af27686f7a39e6c138b7261a686e7ea7a0ef7"))])
 (python .
	 [(0 28)
	  ((emacs
	    (24 4))
	   (cl-lib
	    (1 0)))
	  "Python's flying circus support for Emacs" tar
	  ((:url . "https://github.com/fgallina/python.el")
	   (:keywords "languages")
	   (:maintainer nil . "emacs-devel@gnu.org")
	   (:authors
	    ("Fabián E. Gallina" . "fgallina@gnu.org"))
	   (:commit . "b3d0f53b296a0876ec7a55ae840868e65ed54e14"))])
 (quarter-plane .
		[(0 1)
		 nil "Minor mode for quarter-plane style editing" single
		 ((:url . "http://elpa.gnu.org/packages/quarter-plane.html")
		  (:keywords "convenience" "wp")
		  (:authors
		   ("Peter J. Weisberg" . "pj@irregularexpressions.net"))
		  (:maintainer "Peter J. Weisberg" . "pj@irregularexpressions.net"))])
 (queue .
	[(0 2)
	 nil "Queue data structure" single
	 ((:keywords "extensions" "data structures" "queue")
	  (:authors
	   ("Inge Wallin" . "inge@lysator.liu.se")
	   ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	  (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	  (:url . "http://www.dr-qubit.org/emacs.php"))])
 (rainbow-mode .
	       [(1 0 6)
		nil "Colorize color names in buffers" tar
		((:keywords "faces")
		 (:maintainer "Julien Danjou" . "julien@danjou.info")
		 (:authors
		  ("Julien Danjou" . "julien@danjou.info"))
		 (:url . "https://elpa.gnu.org/packages/rainbow-mode.html")
		 (:commit . "ac68593018ef3555e64ea592d72334f4e3e39209"))])
 (rbit .
       [(0 1)
	nil "Red-black persistent interval trees" single
	((:url . "http://elpa.gnu.org/packages/rbit.html")
	 (:keywords "data structures" "binary tree" "intervals")
	 (:authors
	  ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	 (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (rcirc-color .
	      [(0 4 2)
	       ((emacs
		 (24 4)))
	       "color nicks" tar
	       ((:maintainer "Alex Schroeder" . "alex@gnu.org")
		(:authors
		 ("Alex Schroeder" . "alex@gnu.org"))
		(:keywords "comm")
		(:url . "https://elpa.gnu.org/packages/rcirc-color.html"))])
 (rcirc-menu .
	     [(1 1)
	      nil "A menu of all your rcirc connections" single
	      ((:url . "http://elpa.gnu.org/packages/rcirc-menu.html")
	       (:keywords "comm")
	       (:authors
		("Alex Schroeder" . "alex@gnu.org"))
	       (:maintainer "Alex Schroeder" . "alex@gnu.org"))])
 (realgud .
	  [(1 5 1)
	   ((load-relative
	     (1 3 1))
	    (loc-changes
	     (1 2))
	    (test-simple
	     (1 3 0))
	    (emacs
	     (25)))
	   "A modular front-end for interacting with external debuggers" tar
	   ((:url . "http://github.com/realgud/realgud/")
	    (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
	    (:authors
	     ("Rocky Bernstein" . "rocky@gnu.org"))
	    (:keywords "debugger" "gdb" "python" "perl" "go" "bash" "zsh" "bashdb" "zshdb" "remake" "trepan" "perldb" "pdb"))])
 (realgud-ipdb .
	       [(1 0 0)
		((realgud
		  (1 5 0))
		 (load-relative
		  (1 3 1))
		 (emacs
		  (25)))
		"Realgud front-end to ipdb" tar
		((:url . "http://github.com/rocky/realgud-ipdb")
		 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		 (:authors
		  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-jdb .
	      [(1 0 0)
	       ((realgud
		 (1 4 5))
		(load-relative
		 (1 2))
		(cl-lib
		 (0 5))
		(emacs
		 (25)))
	       "Realgud front-end to Java's jdb debugger\"" tar
	       ((:url . "http://github.com/realgud/realgud-jdb")
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:authors
		 ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-lldb .
	       [(1 0 2)
		((load-relative
		  (1 3 1))
		 (realgud
		  (1 5 0))
		 (emacs
		  (25)))
		"Realgud front-end to lldb" tar
		((:url . "http://github.com/realgud/realgud-lldb")
		 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		 (:authors
		  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-node-debug .
		     [(1 0 0)
		      ((realgud
			(1 4 5))
		       (load-relative
			(1 2))
		       (cl-lib
			(0 5))
		       (emacs
			(25)))
		      "Realgud front-end to older \"node debug\"" tar
		      ((:url . "http://github.com/realgud/realgud-node-debug")
		       (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		       (:authors
			("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-node-inspect .
		       [(1 0 0)
			((realgud
			  (1 4 5))
			 (load-relative
			  (1 2))
			 (cl-lib
			  (0 5))
			 (emacs
			  (24)))
			"Realgud front-end to newer \"node inspect\"" tar
			((:url . "http://github.com/realgud/realgud-node-inspect")
			 (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
			 (:authors
			  ("Rocky Bernstein" . "rocky@gnu.org")))])
 (realgud-trepan-ni .
		    [(1 0 1)
		     ((load-relative
		       (1 2))
		      (realgud
		       (1 5 0))
		      (cl-lib
		       (0 5))
		      (emacs
		       (25)))
		     "Realgud front-end to trepan-ni" tar
		     ((:url . "http://github.com/realgud/realgud-trepan-ni")
		      (:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		      (:authors
		       ("Rocky Bernstein" . "rocky@gnu.org")))])
 (rec-mode .
	   [(1 9 0)
	    ((emacs
	      (25)))
	    "Major mode for viewing/editing rec files" tar
	    ((:url . "https://www.gnu.org/software/recutils/")
	     (:maintainer "Antoine Kalmbach" . "ane@iki.fi")
	     (:authors
	      ("Jose E. Marchesi" . "jemarch@gnu.org"))
	     (:commit . "09f828e9f54f32b56a805e4192588643d95c2f44"))])
 (register-list .
		[(0 1)
		 nil "Interactively list/edit registers" single
		 ((:url . "http://elpa.gnu.org/packages/register-list.html")
		  (:keywords "register")
		  (:authors
		   ("Bastien Guerry" . "bzg@gnu.org"))
		  (:maintainer "Bastien Guerry" . "bzg@gnu.org"))])
 (relint .
	 [(1 20)
	  ((xr
	    (1 22))
	   (emacs
	    (26 1)))
	  "Elisp regexp mistake finder" tar
	  ((:url . "https://github.com/mattiase/relint")
	   (:keywords "lisp" "regexps")
	   (:maintainer "Mattias Engdegård" . "mattiase@acm.org")
	   (:authors
	    ("Mattias Engdegård" . "mattiase@acm.org"))
	   (:commit . "5a918af0c99ab83355d4ec73a2fb39e70c173956"))])
 (repology .
	   [(1 2 3)
	    ((emacs
	      (26 1)))
	    "Repology API access via Elisp" tar
	    ((:keywords "web")
	     (:maintainer "Nicolas Goaziou" . "mail@nicolasgoaziou.fr")
	     (:authors
	      ("Nicolas Goaziou" . "mail@nicolasgoaziou.fr"))
	     (:url . "https://elpa.gnu.org/packages/repology.html")
	     (:commit . "b5829003decbdbe9002e7e1d29f45989a4659927"))])
 (rich-minority .
		[(1 0 3)
		 ((cl-lib
		   (0 5)))
		 "Clean-up and Beautify the list of minor-modes." tar
		 ((:url . "https://github.com/Malabarba/rich-minority")
		  (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
		  (:authors
		   ("Artur Malabarba" . "emacs@endlessparentheses.com"))
		  (:keywords "mode-line" "faces"))])
 (rnc-mode .
	   [(0 3)
	    nil "Emacs mode to edit Relax-NG Compact files" tar
	    ((:keywords "xml" "relaxng")
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:url . "https://elpa.gnu.org/packages/rnc-mode.html")
	     (:commit . "dfee31d83208b734ed1d1fdc523565d7056db850"))])
 (rt-liberation .
		[(5)
		 nil "Emacs interface to RT" tar
		 ((:url . "http://www.nongnu.org/rtliber/")
		  (:keywords "rt" "tickets")
		  (:maintainer "Yoni Rabkin" . "yrk@gnu.org")
		  (:authors
		   ("Yoni Rabkin" . "yrk@gnu.org"))
		  (:commit . "b76ae2828b12efc5f45f51ba873489e049a70924"))])
 (rudel .
	[(0 3 2)
	 ((emacs
	   (24))
	  (cl-lib
	   (0 5))
	  (cl-generic
	   (0 3))
	  (cl-print
	   (1 0)))
	 "A collaborative editing framework for Emacs" tar
	 ((:url . "http://rudel.sourceforge.net/")
	  (:maintainer "Jan Moringen" . "scymtym@users.sourceforge.net")
	  (:authors
	   ("Jan Moringen" . "scymtym@users.sourceforge.net"))
	  (:keywords "rudel" "collaboration"))])
 (satchel .
	  [(0 2)
	   ((emacs
	     (27 2))
	    (project
	     (0 8 1)))
	   "A bag for your files, separated by git branches" tar
	   ((:keywords "tools" "languages")
	    (:maintainer "Theodor Thornhill" . "theo@thornhill.no")
	    (:authors
	     ("Theodor Thornhill" . "theo@thornhill.no"))
	    (:url . "https://elpa.gnu.org/packages/satchel.html")
	    (:commit . "6e5613e203f6937202cb5d55249e7e6be939067b"))])
 (scanner .
	  [(0 2)
	   ((emacs
	     (25 1))
	    (dash
	     (2 12 0)))
	   "Scan documents and images" tar
	   ((:url . "https://gitlab.com/rstocker/scanner.git")
	    (:maintainer "Raffael Stocker" . "r.stocker@mnet-mail.de")
	    (:authors
	     ("Raffael Stocker" . "r.stocker@mnet-mail.de"))
	    (:keywords "hardware" "multimedia"))])
 (scroll-restore .
		 [(1 0)
		  nil "restore original position after scrolling" single
		  ((:url . "http://elpa.gnu.org/packages/scroll-restore.html")
		   (:keywords "scrolling")
		   (:authors
		    ("Martin Rudalics" . "rudalics@gmx.at"))
		   (:maintainer "Martin Rudalics" . "rudalics@gmx.at"))])
 (sed-mode .
	   [(1 0)
	    nil "Major mode to edit sed scripts" single
	    ((:url . "http://elpa.gnu.org/packages/sed-mode.html")
	     (:authors
	      ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (seq .
      [(2 23)
       nil "Sequence manipulation functions" tar
       ((:keywords "sequences")
	(:maintainer nil . "emacs-devel@gnu.org")
	(:authors
	 ("Nicolas Petton" . "nicolas@petton.fr"))
	(:url . "https://elpa.gnu.org/packages/seq.html"))])
 (setup .
	[(1 3 0)
	 ((emacs
	   (26 1)))
	 "Helpful Configuration Macro" tar
	 ((:url . "https://git.sr.ht/~pkal/setup")
	  (:keywords "lisp" "local")
	  (:maintainer "Philip Kaludercic" . "~pkal/public-inbox@lists.sr.ht")
	  (:authors
	   ("Philip Kaludercic" . "philipk@posteo.net"))
	  (:commit . "eece09d1151fd641f31d738b8c62742918993e95"))])
 (shelisp .
	  [(1 0 0)
	   nil "execute elisp in shell" tar
	   ((:keywords "terminals" "lisp" "processes")
	    (:maintainer "Michael R. Mauger" . "michael@mauger.com")
	    (:authors
	     ("Michael R. Mauger" . "michael@mauger.com"))
	    (:url . "https://elpa.gnu.org/packages/shelisp.html"))])
 (shell-command+ .
		 [(2 3 2)
		  ((emacs
		    (24 1)))
		  "An extended shell-command" tar
		  ((:url . "https://git.sr.ht/~pkal/shell-command-plus")
		   (:keywords "unix" "processes" "convenience")
		   (:maintainer "Philip Kaludercic" . "philipk@posteo.net")
		   (:authors
		    ("Philip Kaludercic" . "philipk@posteo.net")))])
 (shen-mode .
	    [(0 1)
	     nil "A major mode for editing shen source code" tar
	     ((:maintainer "Eric Schulte" . "schulte.eric@gmail.com")
	      (:authors
	       ("Eric Schulte" . "schulte.eric@gmail.com"))
	      (:keywords "languages" "shen")
	      (:url . "http://elpa.gnu.org/packages/shen-mode.html"))])
 (sisu-mode .
	    [(7 1 8)
	     nil "Major mode for SiSU markup text" single
	     ((:keywords "text" "syntax" "processes" "tools")
	      (:authors
	       ("Ralph Amissah & Ambrose Kofi Laing"))
	      (:maintainer "Ralph Amissah" . "ralph.amissah@gmail.com")
	      (:url . "http://www.sisudoc.org/"))])
 (sketch-mode .
	      [(1 0 4)
	       nil "Quickly create svg sketches using keyboard and mouse" tar
	       ((:url . "https://github.com/dalanicolai/sketch-mode")
		(:keywords "multimedia")
		(:maintainer "D.L. Nicolai" . "dalanicolai@gmail.com")
		(:authors
		 ("D.L. Nicolai" . "dalanicolai@gmail.com")))])
 (slime-volleyball .
		   [(1 2 0)
		    ((cl-lib
		      (0 5)))
		    "An SVG Slime Volleyball Game" tar
		    ((:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
		     (:authors
		      ("Thomas Fitzsimmons" . "fitzsim@fitzsim.org"))
		     (:keywords "games")
		     (:url . "https://elpa.gnu.org/packages/slime-volleyball.html"))])
 (sm-c-mode .
	    [(1 1)
	     nil "C major mode based on SMIE" single
	     ((:url . "http://elpa.gnu.org/packages/sm-c-mode.html")
	      (:authors
	       ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
	      (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (smalltalk-mode .
		 [(4 0)
		  nil "Major mode for the GNU Smalltalk programming language" tar
		  ((:maintainer "Derek Zhou" . "derek@3qin.us")
		   (:authors
		    ("Steve Byrne"))
		   (:url . "https://elpa.gnu.org/packages/smalltalk-mode.html"))])
 (smart-yank .
	     [(0 1 1)
	      ((emacs
		(24)))
	      "A different approach of yank pointer handling" single
	      ((:url . "http://elpa.gnu.org/packages/smart-yank.html")
	       (:keywords "convenience")
	       (:authors
		("Michael Heerdegen" . "michael_heerdegen@web.de"))
	       (:maintainer "Michael Heerdegen" . "michael_heerdegen@web.de"))])
 (sml-mode .
	   [(6 10)
	    ((emacs
	      (24 3))
	     (cl-lib
	      (0 5)))
	    "Major mode for editing (Standard) ML" single
	    ((:url . "http://elpa.gnu.org/packages/sml-mode.html")
	     (:keywords "sml")
	     (:authors
	      ("Lars Bo Nielsen")
	      ("	Olin Shivers")
	      ("	Fritz Knabe (?)")
	      ("	Steven Gilmore (?)")
	      ("	Matthew Morley" . "mjm@scs.leeds.ac.uk")
	      ("	Matthias Blume" . "blume@cs.princeton.edu")
	      ("	(Stefan Monnier)" . "monnier@iro.umontreal.ca"))
	     (:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (so-long .
	  [(1 1 2)
	   ((emacs
	     (24 4)))
	   "Say farewell to performance problems with minified code." tar
	   ((:url . "https://savannah.nongnu.org/projects/so-long")
	    (:keywords "convenience")
	    (:maintainer "Phil Sainty" . "psainty@orcon.net.nz")
	    (:authors
	     ("Phil Sainty" . "psainty@orcon.net.nz"))
	    (:commit . "045a4fe94c18cd36ef297e62a80cdff449af3aa5"))])
 (soap-client .
	      [(3 2 1)
	       ((emacs
		 (24 1))
		(cl-lib
		 (0 6 1)))
	       "Access SOAP web services" tar
	       ((:url . "https://github.com/alex-hhh/emacs-soap-client")
		(:keywords "soap" "web-services" "comm" "hypermedia")
		(:maintainer "Alexandru Harsanyi" . "AlexHarsanyi@gmail.com")
		(:authors
		 ("Alexandru Harsanyi" . "AlexHarsanyi@gmail.com"))
		(:commit . "37eef19fd608ca81acb40f974b8d7bbe7fc27127"))])
 (sokoban .
	  [(1 4 8)
	   ((emacs
	     (23 1))
	    (cl-lib
	     (0 5)))
	   "Implementation of Sokoban for Emacs." tar
	   ((:maintainer "Dieter Deyke" . "dieter.deyke@gmail.com")
	    (:authors
	     ("Glynn Clements" . "glynn.clements@xemacs.org"))
	    (:keywords "games")
	    (:url . "http://elpa.gnu.org/packages/sokoban.html"))])
 (sotlisp .
	  [(1 6 2)
	   ((emacs
	     (24 1)))
	   "Write lisp at the speed of thought." single
	   ((:keywords "convenience" "lisp")
	    (:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:url . "https://github.com/Malabarba/speed-of-thought-lisp"))])
 (spinner .
	  [(1 7 4)
	   ((emacs
	     (24 3)))
	   "Add spinners and progress-bars to the mode-line for ongoing operations" tar
	   ((:url . "https://github.com/Malabarba/spinner.el")
	    (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com")
	    (:authors
	     ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	    (:keywords "processes" "mode-line"))])
 (sql-beeline .
	      [(0 2)
	       nil "Beeline support for sql.el" tar
	       ((:keywords "sql" "hive" "beeline" "hiveserver2" "impala")
		(:maintainer "Filipp Gunbin" . "fgunbin@fastmail.fm")
		(:authors
		 ("Filipp Gunbin" . "fgunbin@fastmail.fm"))
		(:url . "https://elpa.gnu.org/packages/sql-beeline.html")
		(:commit . "b7ffff9404d93f569e3c2bc59db1be6e848c894f"))])
 (sql-cassandra .
		[(0 2 2)
		 ((emacs
		   (29)))
		 "Cassandra support for sql.el" tar
		 ((:keywords "sql" "cassandra" "cql" "cqlsh")
		  (:maintainer "Filipp Gunbin" . "fgunbin@fastmail.fm")
		  (:authors
		   ("Filipp Gunbin" . "fgunbin@fastmail.fm"))
		  (:url . "https://elpa.gnu.org/packages/sql-cassandra.html")
		  (:commit . "3e997c6ad82f4240bcd62630ad44b5f023bd16c1"))])
 (sql-indent .
	     [(1 6)
	      ((cl-lib
		(0 5)))
	      "Support for indenting code in SQL files." tar
	      ((:url . "https://github.com/alex-hhh/emacs-sql-indent")
	       (:maintainer "Alex Harsanyi" . "AlexHarsanyi@gmail.com")
	       (:authors
		("Alex Harsanyi" . "AlexHarsanyi@gmail.com"))
	       (:keywords "languages" "sql"))])
 (srht .
       [(0 1)
	((emacs
	  (27 1))
	 (plz
	  (0 1)))
	"Sourcehut" tar
	((:url . "https://sr.ht/~akagi/srht.el/")
	 (:keywords "comm" "vc")
	 (:maintainer "Aleksandr Vityazev" . "avityazev@posteo.org")
	 (:authors
	  ("Aleksandr Vityazev" . "avityazev@posteo.org"))
	 (:commit . "e4648260024bef41006bc77b18a598623e7d7201"))])
 (ssh-deploy .
	     [(3 1 13)
	      ((emacs
		(25)))
	      "Deployment via Tramp, global or per directory." tar
	      ((:url . "https://github.com/cjohansson/emacs-ssh-deploy")
	       (:maintainer "Christian Johansson" . "christian@cvj.se")
	       (:authors
		("Christian Johansson" . "christian@cvj.se"))
	       (:keywords "tools" "convenience"))])
 (stream .
	 [(2 2 5)
	  ((emacs
	    (25)))
	  "Implementation of streams" tar
	  ((:maintainer nil . "nicolas@petton.fr")
	   (:authors
	    ("Nicolas Petton" . "nicolas@petton.fr"))
	   (:keywords "stream" "laziness" "sequences")
	   (:url . "http://elpa.gnu.org/packages/stream.html"))])
 (svg .
      [(1 1)
       ((emacs
	 (25)))
       "SVG image creation functions" single
       ((:url . "http://elpa.gnu.org/packages/svg.html")
	(:keywords "image")
	(:authors
	 ("Lars Magne Ingebrigtsen" . "larsi@gnus.org")
	 ("Felix E. Klee" . "felix.klee@inka.de"))
	(:maintainer "Lars Magne Ingebrigtsen" . "larsi@gnus.org"))])
 (svg-clock .
	    [(1 2)
	     ((svg
	       (1 0))
	      (emacs
	       (27 0)))
	     "Analog clock using Scalable Vector Graphics" single
	     ((:url . "http://elpa.gnu.org/packages/svg-clock.html")
	      (:keywords "demo" "svg" "clock")
	      (:authors
	       ("Ulf Jasper" . "ulf.jasper@web.de"))
	      (:maintainer "Ulf Jasper" . "ulf.jasper@web.de"))])
 (svg-lib .
	  [(0 2 5)
	   ((emacs
	     (27 1)))
	   "SVG tags, progress bars & icons" tar
	   ((:url . "https://github.com/rougier/svg-lib")
	    (:keywords "svg" "icons" "tags" "convenience")
	    (:maintainer "Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr")
	    (:commit . "0486c9453449771bc3f5872f70bc5cb23580d0f4"))])
 (svg-tag-mode .
	       [(0 3 2)
		((emacs
		  (27 1))
		 (svg-lib
		  (0 2)))
		"Replace keywords with SVG tags" tar
		((:url . "https://github.com/rougier/svg-tag-mode")
		 (:keywords "convenience")
		 (:maintainer "Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr")
		 (:authors
		  ("Nicolas P. Rougier" . "Nicolas.Rougier@inria.fr")))])
 (swiper .
	 [(0 13 4)
	  ((emacs
	    (24 5))
	   (ivy
	    (0 13 4)))
	  "Isearch with an overview. Oh, man!" tar
	  ((:url . "https://github.com/abo-abo/swiper")
	   (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	   (:authors
	    ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	   (:keywords "matching"))])
 (system-packages .
		  [(1 0 11)
		   ((emacs
		     (24 3)))
		   "functions to manage system packages" tar
		   ((:url . "https://gitlab.com/jabranham/system-packages")
		    (:maintainer "J. Alexander Branham" . "alex.branham@gmail.com")
		    (:authors
		     ("J. Alexander Branham" . "alex.branham@gmail.com")))])
 (tNFA .
       [(0 1 1)
	((queue
	  (0 1)))
	"Tagged non-deterministic finite-state automata" single
	((:keywords "extensions" "matching" "data structures tnfa" "nfa" "dfa" "finite state automata" "automata" "regexp")
	 (:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:url . "http://www.dr-qubit.org/emacs.php"))])
 (taxy .
       [(0 9)
	((emacs
	  (26 3)))
	"Programmable taxonomical grouping for arbitrary objects" tar
	((:url . "https://github.com/alphapapa/taxy.el")
	 (:keywords "lisp")
	 (:maintainer "Adam Porter" . "adam@alphapapa.net")
	 (:authors
	  ("Adam Porter" . "adam@alphapapa.net"))
	 (:commit . "b209692b632bbe8d7f97ea8a39b0c28c1be3b7ec"))])
 (taxy-magit-section .
		     [(0 9 1)
		      ((emacs
			(26 3))
		       (magit-section
			(3 2 1)))
		      "View Taxy structs in a Magit Section buffer" tar
		      ((:url . "https://github.com/alphapapa/taxy.el")
		       (:keywords "lisp")
		       (:maintainer "Adam Porter" . "adam@alphapapa.net")
		       (:authors
			("Adam Porter" . "adam@alphapapa.net"))
		       (:commit . "62624c32d7f58bfa4acc89becc7cc8427d546aab"))])
 (temp-buffer-browse .
		     [(1 5)
		      ((emacs
			(24)))
		      "temp buffer browse mode" single
		      ((:url . "http://elpa.gnu.org/packages/temp-buffer-browse.html")
		       (:keywords "convenience")
		       (:authors
			("Leo Liu" . "sdl.web@gmail.com"))
		       (:maintainer "Leo Liu" . "sdl.web@gmail.com"))])
 (tempel .
	 [(0 4)
	  ((emacs
	    (27 1)))
	  "Tempo templates/snippets with in-buffer field editing" tar
	  ((:url . "https://github.com/minad/tempel")
	   (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	   (:authors
	    ("Daniel Mendler" . "mail@daniel-mendler.de"))
	   (:commit . "ff9756b0646b1d06443eb4bdc64db443f1aa6c40"))])
 (test-simple .
	      [(1 3 0)
	       ((cl-lib
		 (0)))
	       "Simple Unit Test Framework for Emacs Lisp" single
	       ((:keywords "unit-test")
		(:authors
		 ("Rocky Bernstein" . "rocky@gnu.org"))
		(:maintainer "Rocky Bernstein" . "rocky@gnu.org")
		(:url . "http://github.com/rocky/emacs-test-simple"))])
 (timerfunctions .
		 [(1 4 2)
		  ((cl-lib
		    (0 5))
		   (emacs
		    (24)))
		  "Enhanced versions of some timer.el functions" single
		  ((:url . "http://elpa.gnu.org/packages/timerfunctions.html")
		   (:authors
		    ("Dave Goel" . "deego3@gmail.com"))
		   (:maintainer "Dave Goel" . "deego3@gmail.com"))])
 (tiny .
       [(0 2 1)
	nil "Quickly generate linear ranges in Emacs" tar
	((:url . "https://github.com/abo-abo/tiny")
	 (:maintainer "Oleh Krehel" . "ohwoeowho@gmail.com")
	 (:authors
	  ("Oleh Krehel" . "ohwoeowho@gmail.com"))
	 (:keywords "convenience"))])
 (tmr .
      [(0 4 0)
       ((emacs
	 (27 1)))
       "Set timers using a convenient notation" tar
       ((:url . "https://git.sr.ht/~protesilaos/tmr")
	(:keywords "convenience" "timer")
	(:maintainer "TMR Development" . "~protesilaos/tmr@lists.sr.ht")
	(:authors
	 ("Protesilaos Stavrou" . "info@protesilaos.com")
	 ("Damien Cassou" . "damien@cassou.me")
	 ("Daniel Mendler" . "mail@daniel-mendler.de"))
	(:commit . "0d6ce6979c980f0d61c61d1f6478f805612315b4"))])
 (tomelr .
	 [(0 4 3)
	  ((emacs
	    (26 3))
	   (map
	    (3 2 1))
	   (seq
	    (2 23)))
	  "Convert S-expressions to TOML" tar
	  ((:url . "https://github.com/kaushalmodi/tomelr/")
	   (:keywords "data" "tools" "toml" "serialization" "config")
	   (:maintainer "Kaushal Modi" . "kaushal.modi@gmail.com")
	   (:authors
	    ("Kaushal Modi" . "kaushal.modi@gmail.com"))
	   (:commit . "670e0a08f625175fd80137cf69e799619bf8a381"))])
 (tramp .
	[(2 5 3)
	 ((emacs
	   (25 1)))
	 "Transparent Remote Access, Multiple Protocol" tar
	 ((:url . "https://www.gnu.org/software/tramp/")
	  (:keywords "comm" "processes")
	  (:maintainer "Michael Albinus" . "michael.albinus@gmx.de")
	  (:authors
	   ("Kai Großjohann" . "kai.grossjohann@gmx.net"))
	  (:commit . "3e0278ea5938092600a781947334d175a4e4b542"))])
 (tramp-nspawn .
	       [(1 0)
		((emacs
		  (23)))
		"Tramp integration for systemd-nspawn containers" tar
		((:url . "https://github.com/bjc/tramp-nspawn")
		 (:keywords "tramp" "nspawn" "machinectl" "systemd" "systemd-nspawn")
		 (:maintainer "Brian Cully" . "bjc@kublai.com")
		 (:authors
		  ("Brian Cully" . "bjc@kublai.com"))
		 (:commit . "b8380ee8a7c15ad4b96963d224969fc1a0337180"))])
 (tramp-theme .
	      [(0 2)
	       ((emacs
		 (24 1)))
	       "Custom theme for remote buffers" single
	       ((:url . "http://elpa.gnu.org/packages/tramp-theme.html")
		(:keywords "convenience" "faces")
		(:authors
		 ("Michael Albinus" . "michael.albinus@gmx.de"))
		(:maintainer "Michael Albinus" . "michael.albinus@gmx.de"))])
 (transcribe .
	     [(1 5 2)
	      nil "Package for audio transcriptions" single
	      ((:url . "http://elpa.gnu.org/packages/transcribe.html")
	       (:authors
		("David Gonzalez Gandara" . "dggandara@member.fsf.org"))
	       (:maintainer "David Gonzalez Gandara" . "dggandara@member.fsf.org"))])
 (transient .
	    [(0 3 7)
	     ((emacs
	       (25 1)))
	     "Transient commands" tar
	     ((:url . "https://github.com/magit/transient")
	      (:keywords "bindings")
	      (:maintainer "Jonas Bernoulli" . "jonas@bernoul.li")
	      (:authors
	       ("Jonas Bernoulli" . "jonas@bernoul.li")))])
 (transient-cycles .
		   [(1 0)
		    ((emacs
		      (27 1)))
		    "Define command variants with transient cycling" tar
		    ((:url . "https://git.spwhitton.name/dotfiles/tree/.emacs.d/site-lisp/transient-cycles.el")
		     (:keywords "buffer" "window" "minor-mode" "convenience")
		     (:maintainer "Sean Whitton" . "spwhitton@spwhitton.name")
		     (:authors
		      ("Sean Whitton" . "spwhitton@spwhitton.name"))
		     (:commit . "a5b86dd04e84e7ff1cf8c4062843fccb92991145"))])
 (trie .
       [(0 5)
	((tNFA
	  (0 1 1))
	 (heap
	  (0 3)))
	"Trie data structure" tar
	((:url . "http://www.dr-qubit.org/emacs.php")
	 (:maintainer "Toby Cubitt" . "toby-predictive@dr-qubit.org")
	 (:authors
	  ("Toby Cubitt" . "toby-predictive@dr-qubit.org"))
	 (:keywords "extensions" "matching" "data structures trie" "ternary search tree" "tree" "completion" "regexp"))])
 (undo-tree .
	    [(0 8 2)
	     ((queue
	       (0 2))
	      (emacs
	       (24 3)))
	     "Treat undo history as a tree" tar
	     ((:url . "https://www.dr-qubit.org/undo-tree.html")
	      (:keywords "convenience" "files" "undo" "redo" "history" "tree")
	      (:maintainer "Toby Cubitt" . "toby+undo-tree@dr-qubit.org")
	      (:authors
	       ("Toby Cubitt" . "toby+undo-tree@dr-qubit.org"))
	      (:commit . "42aab056e37e033816b2d192f9121b89410b958e"))])
 (uni-confusables .
		  [(0 3)
		   nil "Unicode confusables table" tar
		   ((:maintainer "Teodor Zlatanov" . "tzz@lifelogs.com")
		    (:url . "https://elpa.gnu.org/packages/uni-confusables.html")
		    (:commit . "393e1adeec5b0eb51f9606983655cfe2272c6e54"))])
 (uniquify-files .
		 [(1 0 4)
		  ((emacs
		    (25 0)))
		  "Completion style for files, minimizing directories" tar
		  ((:keywords "completion" "table" "uniquify")
		   (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
		   (:authors
		    ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
		   (:url . "https://elpa.gnu.org/packages/uniquify-files.html")
		   (:commit . "1d76b4f0e283afaff2be053d85f8726ffc3abd6e"))])
 (url-http-ntlm .
		[(2 0 4)
		 ((cl-lib
		   (0 5))
		  (ntlm
		   (2 1 0)))
		 "NTLM authentication for the url library" single
		 ((:keywords "comm" "data" "processes" "hypermedia")
		  (:authors
		   ("Tom Schutzer-Weissmann" . "tom.weissmann@gmail.com"))
		  (:maintainer "Thomas Fitzsimmons" . "fitzsim@fitzsim.org")
		  (:url . "https://code.google.com/p/url-http-ntlm/"))])
 (validate .
	   [(1 0 4)
	    ((emacs
	      (24 1))
	     (cl-lib
	      (0 5))
	     (seq
	      (2 16)))
	    "Schema validation for Emacs-lisp" single
	    ((:url . "http://elpa.gnu.org/packages/validate.html")
	     (:keywords "lisp")
	     (:authors
	      ("Artur Malabarba" . "emacs@endlessparentheses.com"))
	     (:maintainer "Artur Malabarba" . "emacs@endlessparentheses.com"))])
 (valign .
	 [(3 1 1)
	  ((emacs
	    (26 0)))
	  "Visually align tables" tar
	  ((:url . "https://github.com/casouri/valign")
	   (:maintainer "Yuan Fu" . "casouri@gmail.com")
	   (:authors
	    ("Yuan Fu" . "casouri@gmail.com"))
	   (:keywords "convenience" "text" "table"))])
 (vc-backup .
	    [(1 1 0)
	     nil "VC backend for versioned backups" tar
	     ((:url . "https://git.sr.ht/~pkal/vc-backup")
	      (:keywords "vc")
	      (:maintainer "Philip Kaludercic" . "philipk@posteo.net")
	      (:authors
	       ("Philip Kaludercic" . "philipk@posteo.net")))])
 (vc-got .
	 [(1 1 2)
	  ((emacs
	    (25 1)))
	  "VC backend for Game of Trees VCS" tar
	  ((:url . "https://projects.omarpolo.com/vc-got.html")
	   (:keywords "vc" "tools")
	   (:maintainer "Omar Polo" . "op@omarpolo.com")
	   (:authors
	    ("Omar Polo" . "op@omarpolo.com")
	    ("Timo Myyrä" . "timo.myyra@bittivirhe.fi"))
	   (:commit . "20cee209dece2d1a49daf68e043aa6e78b8a13e9"))])
 (vc-hgcmd .
	   [(1 14 1)
	    ((emacs
	      (25 1)))
	    "VC mercurial backend that uses hg command server" tar
	    ((:url . "https://github.com/muffinmad/emacs-vc-hgcmd")
	     (:keywords "vc")
	     (:maintainer "Andrii Kolomoiets" . "andreyk.mad@gmail.com")
	     (:authors
	      ("Andrii Kolomoiets" . "andreyk.mad@gmail.com")))])
 (vcard .
	[(0 2 2)
	 ((emacs
	   (27 1)))
	 "Package for handling vCard files" tar
	 ((:keywords "vcard" "mail" "news")
	  (:maintainer "Noah Friedman <friedman@splode.com>, Eric Abrahamsen" . "eric@ericabrahamsen.net")
	  (:authors
	   ("Noah Friedman" . "friedman@splode.com"))
	  (:url . "https://elpa.gnu.org/packages/vcard.html")
	  (:commit . "28b88fd8ed53ca12d9499175217af81f5ea161fc"))])
 (vcl-mode .
	   [(1 1)
	    nil "Major mode for Varnish Configuration Language" single
	    ((:url . "http://elpa.gnu.org/packages/vcl-mode.html")
	     (:keywords "varnish" "vcl")
	     (:authors
	      ("Sergey Poznyakoff" . "gray@gnu.org.ua"))
	     (:maintainer "Sergey Poznyakoff" . "gray@gnu.org.ua"))])
 (vdiff .
	[(0 2 4)
	 ((emacs
	   (24 4))
	  (hydra
	   (0 13 0)))
	 "A diff tool similar to  vimdiff" tar
	 ((:url . "https://github.com/justbur/emacs-vdiff")
	  (:maintainer "Justin Burkett" . "justin@burkett.cc")
	  (:authors
	   ("Justin Burkett" . "justin@burkett.cc"))
	  (:keywords "diff"))])
 (verilog-mode .
	       [(2021 10 14 127365406)
		nil "major mode for editing verilog source in Emacs" tar
		((:url . "https://www.veripool.org")
		 (:keywords "languages")
		 (:maintainer "Michael McNamara" . "mac@verilog.com")
		 (:authors
		  ("Michael McNamara" . "mac@verilog.com")
		  ("Wilson Snyder" . "wsnyder@wsnyder.org"))
		 (:commit . "86f08fb377e2b8f2df0614c48783bdce347f3758"))])
 (vertico .
	  [(0 25)
	   ((emacs
	     (27 1)))
	   "VERTical Interactive COmpletion" tar
	   ((:url . "https://github.com/minad/vertico")
	    (:maintainer "Daniel Mendler" . "mail@daniel-mendler.de")
	    (:authors
	     ("Daniel Mendler" . "mail@daniel-mendler.de"))
	    (:commit . "c511f874fa0f39e4691ab145b233bbe5b23e4fa2"))])
 (vertico-posframe .
		   [(0 5 4)
		    ((emacs
		      (26 0))
		     (posframe
		      (1 1 4))
		     (vertico
		      (0 13 0)))
		    "Using posframe to show Vertico" tar
		    ((:url . "https://github.com/tumashu/vertico-posframe")
		     (:keywords "abbrev" "convenience" "matching" "vertico")
		     (:maintainer "Feng Shu" . "tumashu@163.com")
		     (:authors
		      ("Feng Shu" . "tumashu@163.com"))
		     (:commit . "7ca364d319e7ba8ccba26a0d57513f3e66f1b05b"))])
 (vigenere .
	   [(1 0)
	    ((emacs
	      (25 1)))
	    "Run a vigenere cipher on a block of text ;" single
	    ((:keywords "data" "vigenere" "cipher")
	     (:authors
	      ("Ian Dunn" . "dunni@gnu.org"))
	     (:maintainer "Ian Dunn" . "dunni@gnu.org")
	     (:url . "https://elpa.gnu.org/packages/vigenere.html"))])
 (visual-filename-abbrev .
			 [(1 2)
			  ((emacs
			    (26 1)))
			  "Visually abbreviate filenames" tar
			  ((:keywords "tools")
			   (:maintainer "Tassilo Horn" . "tsdh@gnu.org")
			   (:authors
			    ("Tassilo Horn" . "tsdh@gnu.org"))
			   (:url . "https://elpa.gnu.org/packages/visual-filename-abbrev.html")
			   (:commit . "3c1a54e2cec935126a74e40920f2cb7929fa4e75"))])
 (visual-fill .
	      [(0 1)
	       nil "Auto-refill paragraphs without modifying the buffer" single
	       ((:url . "http://elpa.gnu.org/packages/visual-fill.html")
		(:authors
		 ("Stefan Monnier" . "monnier@iro.umontreal.ca"))
		(:maintainer "Stefan Monnier" . "monnier@iro.umontreal.ca"))])
 (vlf .
      [(1 7 2)
       nil "View Large Files" tar
       ((:url . "https://github.com/m00natic/vlfi")
	(:maintainer "Andrey Kotlarski" . "m00naticus@gmail.com")
	(:keywords "large files" "utilities"))])
 (vundo .
	[(2 0 0)
	 ((emacs
	   (28 1)))
	 "Visual undo tree" tar
	 ((:url . "https://github.com/casouri/vundo")
	  (:keywords "undo" "text" "editing")
	  (:maintainer "Yuan Fu" . "casouri@gmail.com")
	  (:authors
	   ("Yuan Fu" . "casouri@gmail.com"))
	  (:commit . "10d5debe317b2244d19085151040f955dda4a9ab"))])
 (wcheck-mode .
	      [(2021)
	       nil "General interface for text checkers" tar
	       ((:url . "https://github.com/tlikonen/wcheck-mode")
		(:keywords "text" "spell" "check" "languages" "ispell")
		(:maintainer "Teemu Likonen" . "tlikonen@iki.fi")
		(:authors
		 ("Teemu Likonen" . "tlikonen@iki.fi")))])
 (wconf .
	[(0 2 1)
	 ((emacs
	   (24 4)))
	 "Minimal window layout manager" single
	 ((:keywords "windows" "frames" "layout")
	  (:authors
	   ("Ingo Lohmar" . "i.lohmar@gmail.com"))
	  (:maintainer "Ingo Lohmar" . "i.lohmar@gmail.com")
	  (:url . "https://github.com/ilohmar/wconf"))])
 (web-server .
	     [(0 1 2)
	      ((emacs
		(24 3)))
	      "Emacs Web Server" tar
	      ((:url . "https://github.com/eschulte/emacs-web-server")
	       (:maintainer "Eric Schulte" . "schulte.eric@gmail.com")
	       (:authors
		("Eric Schulte" . "schulte.eric@gmail.com"))
	       (:keywords "http" "server" "network"))])
 (webfeeder .
	    [(1 1 2)
	     ((emacs
	       (25 1)))
	     "Build RSS and Atom webfeeds from HTML files" tar
	     ((:url . "https://gitlab.com/Ambrevar/emacs-webfeeder")
	      (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
	      (:authors
	       ("Pierre Neidhardt" . "mail@ambrevar.xyz"))
	      (:keywords "news" "hypermedia" "blog" "feed" "rss" "atom"))])
 (websocket .
	    [(1 13 1)
	     ((cl-lib
	       (0 5)))
	     "Emacs WebSocket client and server" tar
	     ((:url . "https://github.com/ahyatt/emacs-websocket")
	      (:maintainer "Andrew Hyatt" . "ahyatt@gmail.com")
	      (:authors
	       ("Andrew Hyatt" . "ahyatt@gmail.com"))
	      (:keywords "communication" "websocket" "server"))])
 (which-key .
	    [(3 6 0)
	     ((emacs
	       (24 4)))
	     "Display available keybindings in popup" tar
	     ((:url . "https://github.com/justbur/emacs-which-key")
	      (:maintainer "Justin Burkett" . "justin@burkett.cc")
	      (:authors
	       ("Justin Burkett" . "justin@burkett.cc"))
	      (:commit . "1217db8c6356659e67b35dedd9f5f260c06f6e99"))])
 (windower .
	   [(0 0 1)
	    ((emacs
	      (25)))
	    "Helper functions for window manipulation." single
	    ((:keywords "convenience" "tools")
	     (:authors
	      ("Pierre Neidhardt" . "mail@ambrevar.xyz"))
	     (:maintainer "Pierre Neidhardt" . "mail@ambrevar.xyz")
	     (:url . "https://gitlab.com/ambrevar/windower"))])
 (windresize .
	     [(0 1)
	      nil "Resize windows interactively" single
	      ((:url . "http://elpa.gnu.org/packages/windresize.html")
	       (:keywords "window")
	       (:authors
		("Bastien" . "bzg@gnu.org"))
	       (:maintainer "Bastien" . "bzg@gnu.org"))])
 (wisi .
       [(3 1 8)
	((emacs
	  (25 3))
	 (seq
	  (2 20)))
	"Utilities for implementing an indentation/navigation engine using a generalized LR parser" tar
	((:url . "http://stephe-leake.org/ada/wisitoken.html")
	 (:keywords "parser" "indentation" "navigation")
	 (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
	 (:authors
	  ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
	 (:commit . "45f57f38c3771f00406cdf5c33ffc74c045d2b9e"))])
 (wisitoken-grammar-mode .
			 [(1 2 0)
			  ((wisi
			    (3 1 1))
			   (emacs
			    (25 0))
			   (mmm-mode
			    (0 5 7)))
			  "Major mode for editing WisiToken grammar files" tar
			  ((:url . "http://www.nongnu.org/ada-mode/")
			   (:maintainer "Stephen Leake" . "stephen_leake@stephe-leake.org")
			   (:authors
			    ("Stephen Leake" . "stephen_leake@stephe-leake.org"))
			   (:keywords "languages"))])
 (wpuzzle .
	  [(1 1)
	   nil "find as many word in a given time" single
	   ((:url . "http://elpa.gnu.org/packages/wpuzzle.html")
	    (:authors
	     ("Ivan Kanis" . "ivan@kanis.fr"))
	    (:maintainer "Ivan Kanis" . "ivan@kanis.fr"))])
 (xclip .
	[(1 11)
	 nil "Copy&paste GUI clipboard from text terminal" tar
	 ((:keywords "convenience" "tools")
	  (:maintainer "Leo Liu" . "sdl.web@gmail.com")
	  (:authors
	   ("Leo Liu" . "sdl.web@gmail.com"))
	  (:url . "https://elpa.gnu.org/packages/xclip.html")
	  (:commit . "5b54645cab438e133e27b4690c57066f8271a992"))])
 (xelb .
       [(0 18)
	((emacs
	  (24 4))
	 (cl-generic
	  (0 2)))
	"X protocol Emacs Lisp Binding" tar
	((:url . "https://github.com/ch11ng/xelb")
	 (:maintainer "Chris Feng" . "chris.w.feng@gmail.com")
	 (:authors
	  ("Chris Feng" . "chris.w.feng@gmail.com"))
	 (:keywords "unix"))])
 (xpm .
      [(1 0 5)
       ((cl-lib
	 (0 5))
	(queue
	 (0 2)))
       "edit XPM images" tar
       ((:url . "https://www.gnuvola.org/software/xpm/")
	(:keywords "multimedia" "xpm")
	(:maintainer "Thien-Thi Nguyen" . "ttn@gnu.org")
	(:authors
	 ("Thien-Thi Nguyen" . "ttn@gnu.org")))])
 (xr .
     [(1 23)
      ((emacs
	(26 1)))
      "Convert string regexp to rx notation" tar
      ((:url . "https://github.com/mattiase/xr")
       (:keywords "lisp" "regexps")
       (:maintainer "Mattias Engdegård" . "mattiase@acm.org")
       (:authors
	("Mattias Engdegård" . "mattiase@acm.org"))
       (:commit . "74906f6d104b7daae162dc32684e0443e80fdb03"))])
 (xref .
       [(1 5 0)
	((emacs
	  (26 1)))
	"Cross-referencing commands" tar
	((:url . "https://elpa.gnu.org/packages/xref.html")
	 (:commit . "1b99f2908b7d2c17dc1231f83f499fe460ba926a"))])
 (yasnippet .
	    [(0 14 0)
	     ((cl-lib
	       (0 5)))
	     "Yet another snippet extension for Emacs" tar
	     ((:url . "http://github.com/joaotavora/yasnippet")
	      (:maintainer "Noam Postavsky" . "npostavs@gmail.com")
	      (:keywords "convenience" "emulation"))])
 (yasnippet-classic-snippets .
			     [(1 0 2)
			      ((yasnippet
				(0 9 1)))
			      "\"Classic\" yasnippet snippets" tar
			      ((:maintainer "Noam Postavsky" . "npostavs@gmail.com")
			       (:keywords "snippets")
			       (:url . "http://elpa.gnu.org/packages/yasnippet-classic-snippets.html"))])
 (zones .
	[(2019 7 13)
	 nil "Zones of text - like multiple regions" single
	 ((:keywords "narrow" "restriction" "widen" "region" "zone")
	  (:authors
	   ("Drew Adams"))
	  (:maintainer "Drew Adams" . "drew.adams@oracle.com")
	  (:url . "https://elpa.gnu.org/packages/zones.html"))])
 (ztree .
	[(1 0 6)
	 ((cl-lib
	   (0)))
	 "Text mode directory tree" tar
	 ((:url . "https://github.com/fourier/ztree")
	  (:maintainer "Alexey Veretennikov" . "alexey.veretennikov@gmail.com")
	  (:authors
	   ("Alexey Veretennikov" . "alexey.veretennikov@gmail.com"))
	  (:keywords "files" "tools"))]))
