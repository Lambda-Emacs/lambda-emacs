Lambda-Emacs (ùõå-Emacs) is a configuration that is intended to serve as a useful
starting point for your own custom configuration. The design of this
configuration is aimed at writing and academic work in the humanities (for
discussion of my view of the use of text editors in the humanities [[https://www.colinmclear.net/posts/texteditor/][see here]]),
rather than opposed to, e.g., a programming language emphasis, though I've tried
to make it user-friendly for programmers as well. Another goal of ùõå-Emacs is to
provide enough commentary on the configuration such that it might be useful to
those new to emacs or even [[https://en.wikipedia.org/wiki/Text_editor][text-editors]] generally.

* Why use ùõå-Emacs?

Why choose this configuration over all of the other amazing Emacs "distros" out
there, such as (if you use vim-bindings) [[http://spacemacs.org][spacemacs]], or [[https://github.com/hlissner/doom-emacs][doom-emacs]], or the more
traditional configurations of [[Https://github.com/purcell/emacs.d][Purcell]], [[https://github.com/bbatsov/prelude][Batsov (prelude)]], [[https://github.com/seagle0128/.emacs.d][Zhang (Centaur Emacs)]],
the [[https://github.com/gilbertw1/bmacs][bmacs]] configuration of Bryan Gilbert (see also his [[https://github.com/gilbertw1/emacs-literate-starter][literate starter kit]]) and
[[https://github.com/novoid/dot-emacs][Karl Voit's]] config, John Kitchen's [[https://github.com/jkitchin/scimax][scimax]], Kieran Healy's [[https://github.com/kjhealy/emacs-starter-kit][social sciences
starter kit]], and [[https://github.com/caisah/emacs.dz][many others]]. Further helpful starts include [[https://github.com/hrs/sensible-defaults.el][sensible defaults]]
or especially [[https://github.com/SystemCrafters/rational-emacs][Rational Emacs]]. There are also the recent stylings of [[https://github.com/rougier][Nicolas
Rougier's]] [[https://github.com/rougier/elegant-emacs][elegant-emacs]] and [[https://github.com/rougier/nano-emacs][nano-emacs]]. Truly a surfeit of riches. So why
another one? Here are three reasons. ùõå-Emacs is largely an abstraction from my
own config, which I wanted to make more easily available to others. I also want
a clean but useful config to point my students to. Finally, setting this up is a
useful way for me to think about how "best" to configure Emacs. 

* ùõå-Emacs Structure

- Directory Structure
   + User Emacs directory (.emacs.d)
      - Local directory (.local)
         + Library directory (lambda-library)
            - Setup files (labda-setup)
            - External packages (straight)
         + User directory (lambda-user)
         + Temp directory (temp)
            - Volatile storage (cache)
            - Non-volatile storage (etc)
- File structure
   + early-init.el
   + early-config.el (supplied by user, if any)
   + init.el
   + config.el (supplied by user, if any) 

* Conventions
- Use =custom-set-variable= when dealing with =defcustom= variables. For some
  discussion see [[https://emacs.stackexchange.com/questions/102/advantages-of-setting-variables-with-setq-instead-of-custom-el][this stack exchange discussion]].
- Please consult the elisp [[https://github.com/bbatsov/emacs-lisp-style-guide][style guide]] for all style conventions with regard to
  naming, etc.
   + Note that all functions and variables are prefixed with the "lem" namespace.
   + Internal functions have their namespace delineated by "-\-" while
     user-facing functions have only a single "-"
 
* ùõå-Emacs Modules

ùõå-Emacs is a "modular" distribution of Emacs. It consists of a set of "setup"
elisp files grouped according to the following areas:

- *Core*: These files load essential libraries, useful functions, macros, and sane
  settings. 
- *UI*: Primary settings concerning frame, window, and buffer interaction, along
  with fonts, faces, themeing, completion, tabs/workspaces, and navigation all
  belong to this group.
- *Writing & Editing*: Settings for spelling, citation, dictionary, notes,
  typesetting (LaTeX) and writing-specific modes (markdown).
- *Org*: Writing, Project management, TODOs, Literate programming. What doesn't
  org do? Since many people use Emacs almost exclusively for org-mode, it
  warrants its own group. 
- *Languages*: Programming languages. 
- *Shell*: Configuration for shell and command-line related settings. 
- *Project*: Version control settings and configuration for the built-in project.el


